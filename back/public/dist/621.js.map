{"version":3,"file":"621.js","mappings":"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","sources":["webpack://blooways-front/./components/AddAreaModal/index.tsx","webpack://blooways-front/./components/InviteBloowayModal/index.tsx","webpack://blooways-front/./hooks/useSocket.ts","webpack://blooways-front/./hooks/useInput.ts","webpack://blooways-front/./functions/makeSection.ts","webpack://blooways-front/./components/InviteAreaModal/index.tsx","webpack://blooways-front/./components/TalkForm/index.tsx","webpack://blooways-front/./components/TalkField/index.tsx","webpack://blooways-front/./components/TalkList/index.tsx","webpack://blooways-front/./pages/AreaPage/index.tsx","webpack://blooways-front/./pages/PrivatePage/index.tsx","webpack://blooways-front/./components/PrivateItem/index.tsx","webpack://blooways-front/./components/PrivateList/index.tsx","webpack://blooways-front/./components/AreaItem/index.tsx","webpack://blooways-front/./components/AreaList/index.tsx","webpack://blooways-front/./components/SideBar/index.tsx","webpack://blooways-front/./layouts/Blooway/index.tsx"],"sourcesContent":["import Modal from '@components/Modal';\nimport { Area, User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\nimport { toastConfig } from '@functions/global';\n\ninterface AddAreaModalProps {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowAddAreaModal: (flag: boolean) => void;\n}\nconst AddAreaModal: FC<AddAreaModalProps> = ({ show, onCloseModal, setShowAddAreaModal }) => {\n  const params = useParams<{ blooway?: string }>();\n  const { blooway } = params;\n  const { data: userData } = useSWR<User | false>('/api/users', ApiFetcher);\n  const { mutate: revalidateArea } = useSWR<Area[]>(\n    userData ? `/api/blooways/${blooway}/areas` : null,\n    ApiFetcher,\n  );\n  interface onAddAreaValues {\n    areaName: string;\n  }\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { isSubmitting },\n  } = useForm<onAddAreaValues>();\n\n  const onAddArea: SubmitHandler<onAddAreaValues> = useCallback(\n    (formData) => {\n      const { areaName } = formData;\n      if (!areaName || !areaName.trim()) {\n        return toast.error('에리어 이름을 입력해주세요.', toastConfig);\n      }\n      if (areaName.length > 14) {\n        return toast.error('14자 이내의 에리어 이름을 입력해주세요.', toastConfig);\n      }\n      axios\n        .post(`/api/blooways/${blooway}/areas`, {\n          name: areaName,\n        })\n        .then(() => {\n          setValue('areaName', '');\n          revalidateArea();\n          setShowAddAreaModal(false);\n          toast.success(`에리어 ${areaName}를 생성했습니다.`, toastConfig);\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, toastConfig);\n        });\n    },\n    [setShowAddAreaModal, blooway, revalidateArea, setValue],\n  );\n\n  return (\n    <Modal modalType={0} modalTitle='새로운 에리어 추가하기' show={show} onCloseModal={onCloseModal}>\n      <form id='add-area-modal' className='w-full' onSubmit={handleSubmit(onAddArea)}>\n        <div className='w-full my-4'>\n          <span>에리어 이름</span>\n          <input\n            id='areaName'\n            type='text'\n            className='mt-2 relative block w-full appearance-none rounded-md  border border-slate-300 px-3 py-2 text-slate-800 placeholder-slate-400 focus:z-10 focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm'\n            placeholder='2-14자 이내로 설정해주세요'\n            {...register('areaName', {\n              minLength: 2,\n            })}\n          />\n        </div>\n        <div className='flex justify-center'>\n          <button\n            disabled={isSubmitting}\n            type='submit'\n            className='inline-flex justify-center rounded-md border border-transparent bg-amber-500 px-4 py-2 text-sm font-medium text-white hover:bg-amber-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-amber-500 focus-visible:ring-offset-2'\n          >\n            생성하기\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default AddAreaModal;\n","import Modal from '@components/Modal';\nimport { User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { toastConfig } from '@functions/global';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteBloowayModal: (flag: boolean) => void;\n}\nconst InviteBloowayModal: FC<Props> = ({ show, onCloseModal, setShowInviteBloowayModal }) => {\n  const { blooway } = useParams<{ blooway: string; area: string }>();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher);\n  const { mutate: revalidateMember } = useSWR<User[]>(\n    userData ? `/api/blooways/${blooway}/members` : null,\n    ApiFetcher,\n  );\n\n  interface InviteMemberValues {\n    memberEmail: string;\n  }\n  const {\n    register,\n    handleSubmit,\n    formState: { isSubmitting, errors },\n  } = useForm<InviteMemberValues>();\n  const onInviteMember: SubmitHandler<InviteMemberValues> = useCallback(\n    (formData) => {\n      const { memberEmail } = formData;\n      if (!memberEmail || !memberEmail.trim()) {\n        return toast.error('초대할 멤버의 이메일을 입력해주세요', toastConfig);\n      }\n      axios\n        .post(`/api/blooways/${blooway}/members`, {\n          email: memberEmail,\n        })\n        .then(() => {\n          revalidateMember();\n          setShowInviteBloowayModal(false);\n          toast.success(`${memberEmail}님을 ${blooway} 블루웨이에 초대했습니다.`, toastConfig);\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, toastConfig);\n        });\n    },\n    [blooway, revalidateMember, setShowInviteBloowayModal],\n  );\n\n  return (\n    <Modal modalType={0} modalTitle='블루웨이에 멤버 초대하기' show={show} onCloseModal={onCloseModal}>\n      <form id='invite-blooway-modal' className='w-full' onSubmit={handleSubmit(onInviteMember)}>\n        <div className='w-full my-4'>\n          <span>멤버 이메일</span>\n          <input\n            id='memberEmail'\n            type='text'\n            className='mt-2 relative block w-full appearance-none rounded-md  border border-slate-300 px-3 py-2 text-slate-800 placeholder-slate-400 focus:z-10 focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm'\n            placeholder='이메일 주소'\n            {...register('memberEmail', {\n              maxLength: 100,\n              pattern: {\n                value: /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i,\n                message: '이메일 형식에 맞지 않습니다',\n              },\n            })}\n          />\n        </div>\n        <div className='flex justify-center flex-col'>\n          <span className='text-xs mx-auto text-amber-500 mb-3'>\n            {errors.memberEmail && errors.memberEmail.message}\n          </span>\n          <button\n            disabled={isSubmitting}\n            type='submit'\n            className='inline-flex justify-center rounded-md border border-transparent bg-amber-500 px-4 py-2 text-sm font-medium text-white hover:bg-amber-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-amber-500 focus-visible:ring-offset-2'\n          >\n            초대하기\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteBloowayModal;\n","import { backUrl } from '@functions/global';\nimport { useCallback } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\nconst sockets: { [key: string]: Socket } = {};\nconst useSocket = (blooway?: string): [Socket | undefined, () => void] => {\n  const disconnect = useCallback(() => {\n    if (blooway && sockets[blooway]) {\n      // console.log('💠 Socket Disconnected');\n      sockets[blooway].disconnect();\n      delete sockets[blooway];\n    }\n  }, [blooway]);\n  if (!blooway) {\n    return [undefined, disconnect];\n  }\n  if (!sockets[blooway]) {\n    // 연결된 소켓이 없었으면\n    sockets[blooway] = io(`${backUrl}/bw-${blooway}`, {\n      transports: ['websocket'],\n    });\n    // console.info('새 소켓 생성', blooway, sockets[blooway]);\n    sockets[blooway].on('connect_error', (error) => {\n      console.error(error);\n      console.log(`connect_error due to ${error.message}`);\n    });\n  }\n  // 이미 연결된 소켓이 있으면 기존 소켓 리턴\n  return [sockets[blooway], disconnect];\n};\n\nexport default useSocket;\n","import { Dispatch, SetStateAction, useCallback, useState } from 'react';\n\ntype Handler = (e: any) => void;\ntype ReturnTypes<T = any> = [T, Handler, Dispatch<SetStateAction<T>>];\nconst useInput = <T = any>(initialValue: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialValue);\n  const handler = useCallback((e: any) => {\n    setValue(e.target.value);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import { Talk, Private } from '@typings/types';\nimport dayjs from 'dayjs';\n\nexport default function makeSection<T extends Private | Talk>(talkList: T[]) {\n  const sections: { [key: string]: T[] } = {};\n  talkList.forEach((talk) => {\n    const monthDate = dayjs(talk.createdAt).format('YYYY-MM-DD');\n    if (Array.isArray(sections[monthDate])) {\n      sections[monthDate].push(talk);\n    } else {\n      sections[monthDate] = [talk];\n    }\n  });\n  return sections;\n}\n","import Modal from '@components/Modal';\nimport { User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { toastConfig } from '@functions/global';\n\ninterface InviteAreaModalProps {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteAreaModal: (flag: boolean) => void;\n}\nconst InviteAreaModal: FC<InviteAreaModalProps> = ({ show, onCloseModal, setShowInviteAreaModal }) => {\n  const { blooway, area } = useParams<{ blooway: string; area: string }>();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher);\n  const { mutate: revalidateMembers } = useSWR<User[]>(\n    userData ? `/api/blooways/${blooway}/areas/${area}/members` : null,\n    ApiFetcher,\n  );\n\n  interface InviteMemberValues {\n    memberEmail: string;\n  }\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { isSubmitting, errors },\n  } = useForm<InviteMemberValues>();\n  const onInviteMember: SubmitHandler<InviteMemberValues> = useCallback(\n    (formData) => {\n      const { memberEmail } = formData;\n      if (!memberEmail || !memberEmail.trim()) {\n        return toast.error('초대할 멤버의 이메일을 입력해주세요', toastConfig);\n      }\n      axios\n        .post(`/api/blooways/${blooway}/areas/${area}/members`, {\n          email: memberEmail,\n        })\n        .then(() => {\n          setValue('memberEmail', '');\n          revalidateMembers();\n          setShowInviteAreaModal(false);\n          toast.success(`${memberEmail}님을 ${area} 에리어에 초대했습니다.`, toastConfig);\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, toastConfig);\n        });\n    },\n    [area, revalidateMembers, setShowInviteAreaModal, blooway, setValue],\n  );\n\n  return (\n    <Modal\n      modalType={0}\n      modalTitle={`${area} 에리어에 멤버 초대하기`}\n      show={show}\n      onCloseModal={onCloseModal}\n    >\n      <form id='invite-area-modal' className='w-full' onSubmit={handleSubmit(onInviteMember)}>\n        <div className='w-full my-4'>\n          <span>멤버 이메일</span>\n          <input\n            id='memberEmail'\n            type='text'\n            className='mt-2 relative block w-full appearance-none rounded-md  border border-slate-300 px-3 py-2 text-slate-800 placeholder-slate-400 focus:z-10 focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm'\n            placeholder='이메일 주소'\n            {...register('memberEmail', {\n              maxLength: 100,\n              pattern: {\n                value: /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i,\n                message: '이메일 형식에 맞지 않습니다',\n              },\n            })}\n          />\n        </div>\n        <div className='flex justify-center flex-col'>\n          <span className='text-xs mx-auto text-amber-500 mb-3'>\n            {errors.memberEmail && errors.memberEmail.message}\n          </span>\n          <button\n            disabled={isSubmitting}\n            type='submit'\n            className='inline-flex justify-center rounded-md border border-transparent bg-amber-500 px-4 py-2 text-sm font-medium text-white hover:bg-amber-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-amber-500 focus-visible:ring-offset-2'\n          >\n            초대하기\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteAreaModal;\n","import InviteAreaModal from '@components/InviteAreaModal';\nimport { PhotoIcon, RocketLaunchIcon, UserPlusIcon } from '@heroicons/react/20/solid';\nimport { User } from '@typings/types';\nimport Avvvatars from 'avvvatars-react';\nimport React, { FC, useCallback, useState } from 'react';\nimport { Mention, MentionsInput, SuggestionDataItem } from 'react-mentions';\nimport styled from 'styled-components';\n\nexport const MentionsInputText = styled(MentionsInput)`\n  padding: 10px;\n\n  & textarea {\n    height: 80px;\n    padding: 9px 10px !important;\n    outline: none !important;\n    border-top-left-radius: 10px !important;\n    border-top-right-radius: 10px !important;\n    resize: none !important;\n    line-height: 22px;\n    border: none;\n    ::placeholder {\n      color: #b4b4b4;\n      font-size: 14px;\n    }\n    &:focus {\n      border-color: #cccccc;\n      -webkit-box-shadow: none;\n      box-shadow: none;\n    }\n  }\n`;\n\ninterface TalkFormProps {\n  onSubmitForm: (e: any) => void;\n  talk?: string;\n  onChangeTalk: (e: any) => void;\n  placeholder: string;\n  data?: User[];\n  inPage: string;\n  onImageUpload: (e: any) => void;\n}\nconst TalkForm: FC<TalkFormProps> = ({\n  onSubmitForm,\n  talk,\n  onChangeTalk,\n  placeholder,\n  data,\n  inPage,\n  onImageUpload,\n}) => {\n  const [showInviteAreaModal, setShowInviteAreaModal] = useState(false);\n\n  const onKeydownTalk = useCallback(\n    (e: any) => {\n      if (e.key === 'Enter') {\n        if (!e.shiftKey) {\n          e.preventDefault();\n          onSubmitForm(e);\n        }\n      }\n    },\n    [onSubmitForm],\n  );\n\n  const renderUserSuggestion: (\n    suggestion: SuggestionDataItem,\n    search: string,\n    highlightedDisplay: React.ReactNode,\n    index: number,\n    focused: boolean,\n  ) => React.ReactNode = useCallback(\n    (member, search, highlightedDisplay, index, focus) => {\n      if (!data) {\n        return null;\n      }\n      return (\n        <button\n          className={`${\n            focus && 'bg-amber-500 text-white'\n          } gap-1 text-xs rounded-md px-1 relative bottom-1 py-1 flex border-none items-center w-full`}\n        >\n          <Avvvatars size={18} style='shape' value={data[index].email} />\n          <span>{highlightedDisplay}</span>\n        </button>\n      );\n    },\n    [data],\n  );\n\n  const onClickInviteArea = useCallback(() => {\n    setShowInviteAreaModal(true);\n  }, []);\n  const onCloseModal = useCallback(() => {\n    setShowInviteAreaModal(false);\n  }, []);\n\n  return (\n    <div id='talk-form' className='pb-5 w-full flex pt-0'>\n      <form onSubmit={onSubmitForm} className='w-full border rounded-lg'>\n        <MentionsInputText\n          id='talk'\n          value={talk}\n          onChange={onChangeTalk}\n          onKeyPress={onKeydownTalk}\n          placeholder={placeholder}\n          wrap='hard'\n          forceSuggestionsAboveCursor\n          className='h-20 text-sm md:text-base'\n        >\n          <Mention\n            appendSpaceOnAdd\n            trigger='@'\n            data={data?.map((v) => ({ id: v.id, display: v.username })) || []}\n            renderSuggestion={renderUserSuggestion}\n          />\n        </MentionsInputText>\n        <div className='flex justify-between relative items-center px-2 h-9 bg-slate-100'>\n          <div className='flex items-center'>\n            <label\n              htmlFor='imageUpload'\n              className='cursor-pointer hover:text-amber-500 flex h-9 w-9 items-center justify-center rounded-lg'\n            >\n              <PhotoIcon className='h-6 w-6' aria-hidden='true' />\n            </label>\n            <input\n              id='imageUpload'\n              type='file'\n              multiple\n              accept='image/*'\n              className='hidden'\n              onChange={onImageUpload}\n            />\n            {inPage === 'area' && (\n              <button\n                type='button'\n                onClick={onClickInviteArea}\n                className='flex justify-center items-center p-1 rounded-md duration-200'\n              >\n                <UserPlusIcon className='text-slate-800 hover:text-amber-500 w-5' />\n              </button>\n            )}\n            {inPage === 'private' && (\n              <div className='flex justify-center items-center p-1 text-slate-800 rounded-md duration-200'></div>\n            )}\n          </div>\n\n          <button\n            type='submit'\n            className={`${\n              talk?.trim() && 'bg-amber-500 shadow '\n            } flex justify-center items-center p-1 rounded-md  duration-200`}\n          >\n            <RocketLaunchIcon\n              className={`${talk?.trim() ? 'hover:scale-105 text-white' : 'text-slate-300'}  w-5 `}\n            />\n          </button>\n        </div>\n      </form>\n      {inPage === 'area' && (\n        <InviteAreaModal\n          show={showInviteAreaModal}\n          onCloseModal={onCloseModal}\n          setShowInviteAreaModal={setShowInviteAreaModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TalkForm;\n","import { backUrl } from '@functions/global';\nimport { Talk, Private, User } from '@typings/types';\nimport Avvvatars from 'avvvatars-react';\nimport dayjs from 'dayjs';\nimport React, { FC, useMemo, memo, useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link, NavLink } from 'react-router-dom';\nimport regexifyString from 'regexify-string';\n\ninterface TalkFieldProps {\n  data: Private | Talk;\n}\nconst TalkField: FC<TalkFieldProps> = memo(({ data }) => {\n  const [showCarousel, setShowCarousel] = useState(false);\n  const { blooway } = useParams<{ blooway: string; area: string }>();\n  const user: User = 'Sender' in data ? data.Sender : data.User;\n  const result = useMemo<(string | JSX.Element)[] | JSX.Element>(\n    () =>\n      data.content.startsWith('uploads\\\\') ||\n      data.content.startsWith('uploads/') ||\n      data.content.startsWith('https://bloowaysbucket') ? (\n        <img\n          id='image'\n          alt='user-sending-image'\n          src={process.env.NODE_ENV === 'production' ? `${data.content}` : `${backUrl + '/' + data.content}`}\n          className='max-h-52 rounded-md'\n        />\n      ) : (\n        regexifyString({\n          pattern: /@\\[(.+?)]\\((\\d+?)\\)|\\n/g,\n          decorator(match, index) {\n            const matched: string[] | null = match.match(/@\\[(.+?)]\\((\\d+?)\\)/)!;\n            if (matched) {\n              return (\n                <Link key={match + index} to={`/blooway/${blooway}/private/${matched[2]}`}>\n                  <span className='text-amber-500 font-semibold hover:text-amber-600'>@{matched[1]}</span>\n                </Link>\n              );\n            }\n            return <br key={index} />;\n          },\n          input: data.content,\n        })\n      ),\n    [blooway, data.content],\n  );\n  const onShowCarousel = useCallback((e: any) => {\n    if (e.target.id === 'image') {\n      setShowCarousel(true);\n    }\n  }, []);\n  const onCloseCarousel = useCallback(() => {\n    setShowCarousel(false);\n  }, []);\n  return (\n    <div className='my-1 pt-1.5 pb-3.5 px-2 pr-6 duration-200 rounded-lg hover:bg-slate-100 flex w-full flex-col'>\n      <div className='flex w-full justify-between items-center'>\n        <NavLink\n          className='flex items-center'\n          activeClassName='text-amber-500 font-semibold'\n          to={`/blooway/${blooway}/private/${user.id}`}\n        >\n          <Avvvatars size={32} style='shape' value={user.email} />\n          <div className='ml-2 text-md font-semibold text-slate-800'>{user.username}</div>\n        </NavLink>\n        <div className='flex items-center mt-1 text-xs leading-5 text-slate-400'>\n          <span>{dayjs(data.createdAt).format('A h:mm')}</span>\n        </div>\n      </div>\n\n      <p onClick={onShowCarousel} className='break-words whitespace-pre-line ml-10 text-sm'>\n        {result}\n      </p>\n      {showCarousel && (\n        <div\n          onClick={onCloseCarousel}\n          className='p-3 z-40 bg-slate-800/70  fixed w-full h-full top-0 left-0 flex items-center [&>img]:w-full [&>img]:h-auto [&>img]:shadow-lg [&>img]:shadow-slate-800/80 [&>img]:max-h-full'\n        >\n          {result}\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default TalkField;\n","import TalkField from '@components/TalkField';\nimport { Talk, Private } from '@typings/types';\nimport React, { FC, RefObject, useCallback } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\ninterface TalkListProps {\n  scrollbarRef: RefObject<Scrollbars>;\n  isDataEnd?: boolean;\n  isEmpty: boolean;\n  talkSections: { [key: string]: (Private | Talk)[] };\n  setSize: (f: (size: number) => number) => Promise<(Private | Talk)[][] | undefined>;\n}\nconst TalkList: FC<TalkListProps> = ({ scrollbarRef, isDataEnd, isEmpty, talkSections, setSize }) => {\n  const onScroll = useCallback(\n    (e: any) => {\n      if (e.scrollTop === 0 && !isDataEnd && !isEmpty) {\n        setSize((size) => size + 1).then(() => {\n          scrollbarRef.current?.scrollTop(scrollbarRef.current?.getScrollHeight() - e.scrollHeight);\n        });\n      }\n    },\n    [setSize, scrollbarRef, isDataEnd, isEmpty],\n  );\n\n  return (\n    <div id='talk-list' className='overflow-x-hidden w-full h-full flex'>\n      <Scrollbars autoHide ref={scrollbarRef} onScrollFrame={onScroll}>\n        {Object.entries(talkSections).map(([date, talks]) => {\n          return (\n            <section className={`section-${date}`} key={date}>\n              <div\n                id='talklist-bar'\n                className='flex items-center overflow-x-hidden justify-center flex-[1] w-full sticky top-[7px] md:top-[12px]'\n              >\n                <div className='absolute left-2'>{}</div>\n                <div className='ml-2 inline-flex items-center rounded-md bg-slate-50 px-2 py-1 text-xs font-medium text-slate-800 ring-1 ring-inset ring-slate-500/10'>\n                  {date}\n                </div>\n              </div>\n              {talks.map((talk) => (\n                <TalkField key={talk.id} data={talk} />\n              ))}\n            </section>\n          );\n        })}\n      </Scrollbars>\n    </div>\n  );\n};\n\nexport default TalkList;\n","import useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport { Area, Talk, User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport makeSection from '@functions/makeSection';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { useParams } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\nimport TalkForm from '@components/TalkForm';\nimport TalkList from '@components/TalkList';\nimport { ChatBubbleOvalLeftEllipsisIcon, CubeIcon, UserPlusIcon } from '@heroicons/react/20/solid';\nimport InviteAreaModal from '@components/InviteAreaModal';\n\nconst PAGE_SIZE = 20;\nconst AreaPage = () => {\n  const { blooway, area } = useParams<{ blooway: string; area: string }>();\n  const [socket] = useSocket(blooway);\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher);\n  const { data: areasData } = useSWR<Area[]>(`/api/blooways/${blooway}/areas`, ApiFetcher);\n  const areaData = areasData?.find((v) => v.name === area);\n\n  const {\n    data: talkData,\n    mutate: mutateTalk,\n    setSize,\n  } = useSWRInfinite<Talk[]>(\n    (index) => `/api/blooways/${blooway}/areas/${area}/talks?perPage=${PAGE_SIZE}&page=${index + 1}`,\n    ApiFetcher,\n    {\n      onSuccess(data) {\n        if (data?.length === 1) {\n          setTimeout(() => {\n            scrollbarRef.current?.scrollToBottom();\n          }, 100);\n        }\n      },\n    },\n  );\n  const { data: areaMembersData } = useSWR<User[]>(\n    userData ? `/api/blooways/${blooway}/areas/${area}/members` : null,\n    ApiFetcher,\n  );\n  const [talk, onChangeTalk, setTalk] = useInput('');\n  const [talkArrived, setTalkArrived] = useState(false);\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [, setDragOver] = useState(false);\n  const [, setImageUploaded] = useState(false);\n  const [showInviteAreaModal, setShowInviteAreaModal] = useState(false);\n  const isEmpty = talkData?.[0]?.length === 0;\n  const isDataEnd = isEmpty || (talkData && talkData[talkData.length - 1]?.length < PAGE_SIZE);\n\n  const onSubmitForm = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      if (talk?.trim() && talkData && areaData && userData) {\n        const savedTalk = talk;\n        mutateTalk((prevTalkData) => {\n          prevTalkData?.[0].unshift({\n            id: (talkData[0][0]?.id || 0) + 1,\n            content: savedTalk,\n            UserId: userData.id, // Sender, 에리어에서는 받는 사람은 필요없고 보내는 사람만 있어도 ok.\n            User: userData,\n            createdAt: new Date(),\n            AreaId: areaData.id,\n            Area: areaData,\n          });\n          return prevTalkData;\n        }, false).then(() => {\n          localStorage.setItem(`${blooway}-${area}`, new Date().getTime().toString());\n          setTalk('');\n          setTalkArrived(false);\n          if (scrollbarRef.current) {\n            scrollbarRef.current.scrollToBottom();\n          }\n        });\n        axios\n          .post(`/api/blooways/${blooway}/areas/${area}/talks`, {\n            content: savedTalk,\n          })\n          .catch(console.error);\n      }\n    },\n    [talk, blooway, area, areaData, userData, talkData, mutateTalk, setTalk],\n  );\n\n  const onMessage = useCallback(\n    (data: Talk) => {\n      if (\n        data.Area.name === area &&\n        (data.content.startsWith('uploads\\\\') ||\n          data.content.startsWith('uploads/') ||\n          data.content.startsWith('https://bloowaysbucket') ||\n          data.UserId !== userData?.id)\n      ) {\n        mutateTalk((talkData) => {\n          talkData?.[0].unshift(data);\n          return talkData;\n        }, false).then(() => {\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              setTalkArrived(false);\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 100);\n            } else {\n              setTalkArrived(true);\n            }\n          }\n        });\n      }\n    },\n    [area, userData, mutateTalk],\n  );\n\n  useEffect(() => {\n    socket?.on('message', onMessage);\n    return () => {\n      socket?.off('message', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    localStorage.setItem(`${blooway}-${area}`, new Date().getTime().toString());\n  }, [blooway, area]);\n\n  const onDrop = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            formData.append('image', file);\n          }\n        }\n      } else {\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`/api/blooways/${blooway}/areas/${area}/images`, formData).then(() => {\n        setDragOver(false);\n        localStorage.setItem(`${blooway}-${area}`, new Date().getTime().toString());\n      });\n    },\n    [blooway, area],\n  );\n  const onImageUpload = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const formData = new FormData();\n      for (let i = 0; i < e.target.files.length; i++) {\n        formData.append('image', e.target.files[i]);\n      }\n      axios.post(`/api/blooways/${blooway}/areas/${area}/images`, formData).then(() => {\n        setImageUploaded(true);\n        localStorage.setItem(`${blooway}-${area}`, new Date().getTime().toString());\n        setImageUploaded(false);\n      });\n    },\n    [blooway, area],\n  );\n  const onClickInviteArea = useCallback(() => {\n    setShowInviteAreaModal(true);\n  }, []);\n  const onTalkArrivedConfirmed = useCallback(() => {\n    setTalkArrived(false);\n    scrollbarRef.current?.scrollToBottom();\n  }, []);\n  const onDragOver = useCallback((e: any) => {\n    e.preventDefault();\n    setDragOver(true);\n  }, []);\n  const onCloseModal = useCallback(() => {\n    setShowInviteAreaModal(false);\n  }, []);\n  if (areasData && !areaData) {\n    return <Redirect to={`/blooway/${blooway}/area/전체`} />;\n  }\n\n  const talkSections = makeSection(talkData ? ([] as Talk[]).concat(...talkData).reverse() : []);\n\n  return (\n    <div\n      id='area-page'\n      className='flex flex-col overflow-x-hidden w-full h-full relative '\n      onDrop={onDrop}\n      onDragOver={onDragOver}\n    >\n      <div\n        id='mobile-area-pointer'\n        className='flex items-center w-full justify-between absolute top-2 md:top-3 left-1 text-sm z-10'\n      >\n        <div className='flex items-center bg-amber-500 text-white px-1.5 py-0.5 rounded-md '>\n          <CubeIcon className='w-4 mr-0.5' />\n          <span className='max-w-[65px] md:max-w-[150px] text-ellipsis overflow-hidden'>{area}</span>\n        </div>\n        <button\n          onClick={onClickInviteArea}\n          type='button'\n          className='hover:bg-slate-900 flex items-center bg-slate-800 text-white px-1.5 relative right-2 py-0.5 rounded-md '\n        >\n          <UserPlusIcon className='w-4 mr-1' />\n          멤버\n        </button>\n      </div>\n      {isEmpty && (\n        <div className='relative text-sm text-center w-full h-full text-slate-500 flex items-center justify-center'>\n          내용이 없습니다\n          <br />\n          메시지를 보내서 멤버들과 토크를 시작해보세요!\n        </div>\n      )}\n      {talkArrived && (\n        <button\n          type='button'\n          onClick={onTalkArrivedConfirmed}\n          className=' hover:bg-amber-600 absolute bottom-40 animate-bounce mx-auto z-10 left-0 right-0 px-2 py-0.5 w-[85px] flex items-center justify-center text-sm font-medium bg-amber-500 text-white rounded-md'\n        >\n          <ChatBubbleOvalLeftEllipsisIcon className=' w-4 mr-0.5' />새 토크\n        </button>\n      )}\n\n      <TalkList\n        scrollbarRef={scrollbarRef}\n        isDataEnd={isDataEnd}\n        isEmpty={isEmpty}\n        talkSections={talkSections}\n        setSize={setSize}\n      />\n      <TalkForm\n        onSubmitForm={onSubmitForm}\n        talk={talk}\n        onChangeTalk={onChangeTalk}\n        placeholder={`${area} 에리어에 토크`}\n        data={areaMembersData}\n        inPage='area'\n        onImageUpload={onImageUpload}\n      />\n\n      <InviteAreaModal\n        show={showInviteAreaModal}\n        onCloseModal={onCloseModal}\n        setShowInviteAreaModal={setShowInviteAreaModal}\n      />\n    </div>\n  );\n};\n\nexport default AreaPage;\n","import TalkForm from '@components/TalkForm';\nimport TalkList from '@components/TalkList';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport { Private } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { useParams } from 'react-router';\nimport makeSection from '@functions/makeSection';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\nimport { ChatBubbleOvalLeftEllipsisIcon, EyeSlashIcon } from '@heroicons/react/20/solid';\n\nconst PAGE_SIZE = 20;\nconst PrivatePage: FC = () => {\n  const { blooway, id } = useParams<{ blooway: string; id: string }>();\n  const [socket] = useSocket(blooway);\n  const { data: meData } = useSWR('/api/users', ApiFetcher);\n  const { data: userData } = useSWR(`/api/blooways/${blooway}/users/${id}`, ApiFetcher);\n  const {\n    data: talkData,\n    mutate: mutateTalk,\n    setSize, // setSize: 페이지 수를 변경\n  } = useSWRInfinite<Private[]>(\n    (index) => `/api/blooways/${blooway}/privates/${id}/talks?perPage=${PAGE_SIZE}&page=${index + 1}`,\n    ApiFetcher,\n    {\n      onSuccess(data) {\n        console.log('data', data.length, data);\n        if (data?.length === 1) {\n          setTimeout(() => {\n            scrollbarRef.current?.scrollToBottom();\n          }, 100);\n        }\n      },\n    },\n  );\n  const [talk, onChangeTalk, setTalk] = useInput('');\n  const [talkArrived, setTalkArrived] = useState(false);\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [, setDragOver] = useState(false);\n  const isEmpty = talkData?.[0]?.length === 0;\n  const isDataEnd = isEmpty || (talkData && talkData[talkData.length - 1]?.length < PAGE_SIZE);\n\n  const onSubmitForm = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      if (talk?.trim() && talkData) {\n        const savedTalk = talk;\n        // optimistic ui, optimistic ui 사용 후에는 shouldRevalidate가 false여야 함.\n        mutateTalk((prevTalkData) => {\n          prevTalkData?.[0].unshift({\n            id: (talkData[0][0]?.id || 0) + 1,\n            content: savedTalk,\n            SenderId: meData.id,\n            Sender: meData,\n            ReceiverId: userData.id,\n            Receiver: userData,\n            createdAt: new Date(),\n          });\n          return prevTalkData;\n        }, false).then(() => {\n          localStorage.setItem(`${blooway}-${id}`, new Date().getTime().toString());\n          setTalk('');\n          setTalkArrived(false);\n          if (scrollbarRef.current) {\n            scrollbarRef.current.scrollToBottom();\n          }\n        });\n        axios\n          .post(`/api/blooways/${blooway}/privates/${id}/talks`, {\n            content: talk,\n          })\n          .catch(console.error);\n      }\n    },\n    [talk, blooway, id, meData, userData, talkData, mutateTalk, setTalk],\n  );\n\n  const onMessage = useCallback(\n    (data: Private) => {\n      // id는 상대방 id\n      if (data.SenderId === Number(id) && meData.id !== Number(id)) {\n        mutateTalk((talkData) => {\n          talkData?.[0].unshift(data);\n          return talkData;\n        }, false).then(() => {\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              setTalkArrived(false);\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 100);\n            } else {\n              setTalkArrived(true);\n            }\n          }\n        });\n      }\n    },\n    [id, meData, mutateTalk],\n  );\n\n  useEffect(() => {\n    socket?.on('private', onMessage);\n    return () => {\n      socket?.off('private', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    localStorage.setItem(`${blooway}-${id}`, new Date().getTime().toString());\n  }, [blooway, id]);\n\n  const onDrop = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            // console.log('... file[' + i + '].name = ' + file.name);\n            formData.append('image', file);\n          }\n        }\n      } else {\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          // console.log('... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`/api/blooways/${blooway}/privates/${id}/images`, formData).then(() => {\n        setDragOver(false);\n        localStorage.setItem(`${blooway}-${id}`, new Date().getTime().toString());\n        mutateTalk();\n      });\n    },\n    [blooway, id, mutateTalk],\n  );\n  const onImageUpload = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const formData = new FormData();\n      for (let i = 0; i < e.target.files.length; i++) {\n        formData.append('image', e.target.files[i]);\n      }\n      axios.post(`/api/blooways/${blooway}/privates/${id}/images`, formData).then(() => {\n        localStorage.setItem(`${blooway}-${id}`, new Date().getTime().toString());\n        mutateTalk();\n      });\n    },\n    [blooway, id, mutateTalk],\n  );\n  const onTalkArrivedConfirmed = useCallback(() => {\n    setTalkArrived(false);\n    scrollbarRef.current?.scrollToBottom();\n  }, []);\n  const onDragOver = useCallback((e: any) => {\n    e.preventDefault();\n    setDragOver(true);\n  }, []);\n\n  if (!userData || !meData) {\n    return null;\n  }\n\n  const talkSections = makeSection(talkData ? ([] as Private[]).concat(...talkData).reverse() : []);\n\n  return (\n    <div\n      className='flex flex-col overflow-x-hidden w-full h-full relative '\n      onDrop={onDrop}\n      onDragOver={onDragOver}\n    >\n      <div\n        id='mobile-private-pointer'\n        className='flex items-center absolute top-2 md:top-3 left-1 text-sm z-10 rounded-md px-1.5 py-0.5 bg-amber-500 text-white'\n      >\n        <EyeSlashIcon className='w-4 mr-0.5' />\n        <span className='max-w-[65px] md:max-w-[150px] text-ellipsis overflow-hidden'>\n          {userData.username}\n        </span>\n      </div>\n      {isEmpty && (\n        <div className='relative text-sm text-center w-full h-full text-slate-500 flex items-center justify-center'>\n          내용이 없습니다\n          <br />\n          메시지를 보내서 멤버들과 토크를 시작해보세요!\n        </div>\n      )}\n      {talkArrived && (\n        <button\n          type='button'\n          onClick={onTalkArrivedConfirmed}\n          className=' hover:bg-amber-600 absolute bottom-40 animate-bounce mx-auto z-10 left-0 right-0 px-2 py-0.5 w-[85px] flex items-center justify-center text-sm font-medium bg-amber-500 text-white rounded-md'\n        >\n          <ChatBubbleOvalLeftEllipsisIcon className=' w-4 mr-0.5' />새 토크\n        </button>\n      )}\n      <TalkList\n        scrollbarRef={scrollbarRef}\n        isDataEnd={isDataEnd}\n        isEmpty={isEmpty}\n        talkSections={talkSections}\n        setSize={setSize}\n      />\n      <TalkForm\n        onSubmitForm={onSubmitForm}\n        talk={talk}\n        onChangeTalk={onChangeTalk}\n        placeholder={`${userData.username}에게 프라이빗 토크`}\n        data={[]}\n        inPage='private'\n        onImageUpload={onImageUpload}\n      />\n    </div>\n  );\n};\n\nexport default PrivatePage;\n","import { User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport React, { FC, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSWR from 'swr';\nimport Avvvatars from 'avvvatars-react';\n\ninterface PrivateItemProps {\n  member: User;\n  isOnline: boolean;\n}\nconst PrivateItem: FC<PrivateItemProps> = ({ member, isOnline }) => {\n  const { blooway } = useParams<{ blooway?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher, {\n    dedupingInterval: 2000,\n  });\n  const date = localStorage.getItem(`${blooway}-${member.id}`) || 0;\n  const { data: unreadCount, mutate } = useSWR<number>(\n    userData ? `/api/blooways/${blooway}/privates/${member.id}/unreads?after=${date}` : null,\n    ApiFetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/blooway/${blooway}/private/${member.id}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, blooway, member]);\n\n  return (\n    <NavLink\n      key={member.id}\n      className='flex items-center w-full'\n      activeClassName='text-amber-500 font-semibold'\n      to={`/blooway/${blooway}/private/${member.id}`}\n    >\n      <div className='relative'>\n        <Avvvatars size={24} shadow={true} style='shape' value={member.email} />\n        <div\n          className={`${\n            isOnline ? 'bg-emerald-400' : 'bg-slate-300'\n          } absolute right-0 bottom-0 border border-white w-[9px] h-[9px] rounded-full`}\n        ></div>\n      </div>\n      <span className='line-clamp-1 hover:text-amber-500 ml-1.5 overflow-hidden text-ellipsis max-w-[120px]'>\n        {member.username}\n      </span>\n      {member.id === userData?.id && <span className='ml-0.5'>(나)</span>}\n      {unreadCount !== undefined && unreadCount > 0 && (\n        <div\n          id='unread-count'\n          className='bg-amber-500 text-white ml-1.5 rounded-full w-4 h-4 text-[6px] p-1 flex justify-center items-center'\n        >\n          {unreadCount}\n        </div>\n      )}\n    </NavLink>\n  );\n};\n\nexport default PrivateItem;\n","import PrivateItem from '@components/PrivateItem';\nimport useSocket from '@hooks/useSocket';\nimport { User, UserWithOnline } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\nimport { Disclosure } from '@headlessui/react';\n\nconst PrivateList: FC = () => {\n  const { blooway } = useParams<{ blooway?: string }>();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: memberData } = useSWR<UserWithOnline[]>(\n    userData ? `/api/blooways/${blooway}/members` : null,\n    ApiFetcher,\n  );\n  const [socket] = useSocket(blooway);\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  useEffect(() => {\n    setOnlineList([]);\n  }, [blooway]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    // console.log('socket on private', socket?.hasListeners('private'), socket);\n    return () => {\n      // console.log('socket off private', socket?.hasListeners('private'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  return (\n    <>\n      <div>\n        {memberData?.map((member) => {\n          const isOnline = onlineList.includes(member.id);\n          return (\n            <Disclosure.Panel key={member.id} className='px-4 py-1.5 text-sm'>\n              <PrivateItem member={member} isOnline={isOnline} />\n            </Disclosure.Panel>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default PrivateList;\n","import { Area, User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport React, { FC, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSWR from 'swr';\n\ninterface AreaItemProps {\n  area: Area;\n}\nconst AreaItem: FC<AreaItemProps> = ({ area }) => {\n  const { blooway } = useParams<{ blooway?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher, {\n    dedupingInterval: 2000,\n  });\n  const date = localStorage.getItem(`${blooway}-${area.name}`) || 0;\n  const { data: unreadCount, mutate } = useSWR<number>(\n    userData ? `/api/blooways/${blooway}/areas/${area.name}/unreads?after=${date}` : null,\n    ApiFetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/blooway/${blooway}/area/${area.name}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, blooway, area]);\n\n  return (\n    <NavLink\n      key={area.name}\n      className='w-full flex items-center'\n      activeClassName='text-amber-500 font-semibold'\n      to={`/blooway/${blooway}/area/${area.name}`}\n    >\n      <div className='hover:text-amber-500  flex items-center overflow-hidden text-ellipsis max-w-[120px]'>\n        {area.name}\n      </div>\n      {unreadCount !== undefined && unreadCount > 0 && (\n        <div\n          id='unread-count'\n          className='bg-amber-500 text-white ml-1.5 rounded-full w-4 h-4 text-[6px] p-1 flex justify-center items-center'\n        >\n          {unreadCount}\n        </div>\n      )}\n    </NavLink>\n  );\n};\n\nexport default AreaItem;\n","import AreaItem from '@components/AreaItem';\nimport { Area, User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport React, { FC } from 'react';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\nimport { Disclosure } from '@headlessui/react';\n\nconst AreaList: FC = () => {\n  const { blooway } = useParams<{ blooway?: string }>();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher, {\n    dedupingInterval: 2000,\n  });\n  const { data: areaData } = useSWR<Area[]>(userData ? `/api/blooways/${blooway}/areas` : null, ApiFetcher);\n\n  return (\n    <>\n      {areaData?.map((area) => {\n        return (\n          <Disclosure.Panel key={area.id} className='px-4 py-1.5 text-sm'>\n            <AreaItem area={area} />\n          </Disclosure.Panel>\n        );\n      })}\n    </>\n  );\n};\n\nexport default AreaList;\n","import React, { FC, memo, useCallback, useState } from 'react';\nimport { Disclosure } from '@headlessui/react';\nimport { ChevronUpIcon, PlusCircleIcon } from '@heroicons/react/24/outline';\nimport PrivateList from '@components/PrivateList';\nimport AreaList from '@components/AreaList';\nimport { CubeIcon, EyeSlashIcon, MegaphoneIcon } from '@heroicons/react/20/solid';\nimport { Link } from 'react-router-dom';\nimport AddAreaModal from '@components/AddAreaModal';\n\ninterface SideBarProps {}\n\nconst SideBar: FC<SideBarProps> = memo(() => {\n  const [showCta, setShowCta] = useState(true);\n  const [showAddAreaModal, setShowAddAreaModal] = useState(false);\n\n  const onRemoveCta = useCallback(() => {\n    setShowCta(false);\n  }, []);\n  const onClickAddArea = useCallback(() => {\n    setShowAddAreaModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowAddAreaModal(false);\n  }, []);\n  return (\n    <div className='hidden md:block w-[25%] rounded-md'>\n      <div className='overflow-y-auto w-full rounded-2xl bg-white p-2'>\n        <Disclosure defaultOpen={true} as='div'>\n          {({ open }) => (\n            <>\n              <Disclosure.Button className='flex w-full justify-between rounded-lg bg-slate-100 px-4 py-2 text-left text-sm font-medium  hover:bg-amber-500 hover:text-white focus:outline-none focus-visible:ring focus-visible:ring-amber-500 focus-visible:ring-opacity-75'>\n                <div className='flex items-center'>\n                  <CubeIcon className='w-5' />\n                  <span className='ml-1'>에리어</span>\n                </div>\n                <ChevronUpIcon className={`${open ? 'rotate-180 transform' : ''} h-5 w-5`} />\n              </Disclosure.Button>\n              <AreaList />\n              <button type='button' onClick={onClickAddArea} className='px-4 py-1.5 text-sm'>\n                <div className={`hover:text-amber-500 flex items-center`}>\n                  <PlusCircleIcon className='stroke-2 w-5 mr-0.5' />\n                  에리어 추가\n                </div>\n              </button>\n            </>\n          )}\n        </Disclosure>\n        <Disclosure defaultOpen={true} as='div' className='mt-2'>\n          {({ open }) => (\n            <>\n              <Disclosure.Button className='flex w-full justify-between rounded-lg bg-slate-100 px-4 py-2 text-left text-sm font-medium  hover:bg-amber-500 hover:text-white focus:outline-none focus-visible:ring focus-visible:ring-amber-500 focus-visible:ring-opacity-75'>\n                <div className='flex items-center'>\n                  <EyeSlashIcon className='w-5' />\n                  <span className='ml-1'>프라이빗 토크</span>\n                </div>\n                <ChevronUpIcon className={`${open ? 'rotate-180 transform' : ''} h-5 w-5`} />\n              </Disclosure.Button>\n              <PrivateList />\n            </>\n          )}\n        </Disclosure>\n        {showCta && (\n          <div id='dropdown-cta' className='p-4 mt-6 rounded-lg bg-indigo-50 '>\n            <div className='flex items-center mb-3'>\n              <div className='bg-indigo-200 flex items-center text-sm font-semibold mr-2 px-2.5 py-0.5 rounded'>\n                <MegaphoneIcon className='w-4' />\n                <span className='ml-1'>Blooways</span>\n              </div>\n              <button\n                type='button'\n                onClick={onRemoveCta}\n                className='ml-auto -mx-1.5 -my-1.5 bg-indigo-50  rounded-lg focus:ring-2 p-1 hover:bg-indigo-200 inline-flex h-6 w-6 '\n              >\n                <svg\n                  aria-hidden='true'\n                  className='w-4 h-4'\n                  fill='currentColor'\n                  viewBox='0 0 20 20'\n                  xmlns='http://www.w3.org/2000/svg'\n                >\n                  <path\n                    fillRule='evenodd'\n                    d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'\n                    clipRule='evenodd'\n                  ></path>\n                </svg>\n              </button>\n            </div>\n            <p className='mb-3 text-sm text-indigo-900'>BlooWays Beta에 오신것을 환영합니다!</p>\n            <Link\n              to='/version-release'\n              className='text-sm text-indigo-900/60 underline font-medium hover:text-indigo-900/80'\n            >\n              버전 릴리즈 확인\n            </Link>\n          </div>\n        )}\n      </div>\n      <AddAreaModal\n        show={showAddAreaModal}\n        onCloseModal={onCloseModal}\n        setShowAddAreaModal={setShowAddAreaModal}\n      />\n    </div>\n  );\n});\n\nexport default SideBar;\n","import AddAreaModal from '@components/AddAreaModal';\nimport InviteBloowayModal from '@components/InviteBloowayModal';\nimport DropMenu from '@components/DropMenu';\nimport Modal from '@components/Modal';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport useSocket from '@hooks/useSocket';\nimport AreaPage from '@pages/AreaPage';\nimport PrivatePage from '@pages/PrivatePage';\nimport { Area, User, UserWithOnline } from '@typings/types';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useSWR from 'swr';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { Menu } from '@headlessui/react';\nimport SideBar from '@components/SideBar';\nimport { toastConfig } from '@functions/global';\nimport AreaItem from '@components/AreaItem';\nimport PrivateItem from '@components/PrivateItem';\nimport {\n  CubeIcon,\n  Squares2X2Icon,\n  SquaresPlusIcon,\n  UserGroupIcon,\n  UserIcon,\n  UserPlusIcon,\n} from '@heroicons/react/20/solid';\n\nconst Blooway = () => {\n  const params = useParams<{ blooway?: string }>();\n  const { blooway } = params;\n  const [socket, disconnectSocket] = useSocket(blooway);\n  const { data: userData, mutate: revalidateUser } = useSWR<User | false>('/api/users', ApiFetcher);\n  const { data: areaData } = useSWR<Area[]>(userData ? `/api/blooways/${blooway}/areas` : null, ApiFetcher);\n  const { data: memberData } = useSWR<UserWithOnline[]>(\n    userData ? `/api/blooways/${blooway}/members` : null,\n    ApiFetcher,\n  );\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n  const [showCreateBloowayModal, setShowCreateBloowayModal] = useState(false);\n  const [showInviteBloowayModal, setShowInviteBloowayModal] = useState(false);\n  const [showAddAreaModal, setShowAddAreaModal] = useState(false);\n\n  interface CreateBloowayValues {\n    bloowayName: string;\n    bloowayLink: string;\n    description: string;\n  }\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { isSubmitting },\n  } = useForm<CreateBloowayValues>();\n\n  const onCreateBlooway: SubmitHandler<CreateBloowayValues> = useCallback(\n    (formData) => {\n      const { bloowayName, bloowayLink, description } = formData;\n      if (!bloowayName || !bloowayName.trim()) {\n        return toast.error('블루웨이 이름을 입력해주세요', toastConfig);\n      }\n      if (!bloowayLink || !bloowayLink.trim()) {\n        return toast.error('키워드 링크를 입력해주세요', toastConfig);\n      }\n      if (bloowayName.length > 14) {\n        return toast.error('14자 이내의 블루웨이 이름을 입력해주세요.', toastConfig);\n      }\n      if (bloowayLink.length > 14) {\n        return toast.error('14자 이내의 블루웨이 링크를 입력해주세요.', toastConfig);\n      }\n      axios\n        .post('/api/blooways', {\n          blooway: bloowayName,\n          link: bloowayLink,\n          description,\n        })\n        .then(() => {\n          revalidateUser();\n          setShowCreateBloowayModal(false);\n          setValue('bloowayName', '');\n          setValue('bloowayLink', '');\n          setValue('description', '');\n          return toast.success('새 블루웨이가 생성되었습니다', toastConfig);\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, toastConfig);\n        });\n    },\n    [revalidateUser, setValue],\n  );\n\n  const onClickCreateBlooway = useCallback(() => {\n    setShowCreateBloowayModal(true);\n  }, []);\n\n  const onClickAddArea = useCallback(() => {\n    setShowAddAreaModal(true);\n  }, []);\n\n  const onClickInviteBlooway = useCallback(() => {\n    setShowInviteBloowayModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowCreateBloowayModal(false);\n    setShowAddAreaModal(false);\n    setShowInviteBloowayModal(false);\n  }, []);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    return () => {\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    return () => {\n      disconnectSocket();\n    };\n  }, [disconnectSocket, blooway]);\n  useEffect(() => {\n    if (areaData && userData) {\n      socket?.emit('signin', { id: userData?.id, areas: areaData.map((v) => v.id) });\n    }\n  }, [socket, userData, areaData]);\n\n  if (userData === false) {\n    return <Redirect to='/signin' />;\n  }\n\n  return (\n    <div\n      id='blooway-layout'\n      className='overflow-hidden pt-14 pb-2 h-screen mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 text-slate-800'\n    >\n      <div className='pt-2.5 h-9 border-b-amber-500 border-b p-2 justify-between text-base flex items-center'>\n        <div className='flex z-20 items-center'>\n          <Squares2X2Icon className='w-4 mr-1' />\n          <DropMenu\n            menuTitle={userData?.Blooways.find((v) => v.link === blooway)?.name}\n            chevron={true}\n            direction='left'\n          >\n            <Menu.Item>\n              {({ active }) => (\n                <button\n                  onClick={onClickInviteBlooway}\n                  className={`${\n                    active ? 'bg-amber-500 text-white font-semibold' : 'text-slate-800'\n                  } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                >\n                  <UserPlusIcon className='w-4 mr-1' />\n                  <span className='text-ellipsis line-clamp-1 overflow-hidden max-w-[80px]'>\n                    {userData?.Blooways.find((v) => v.link === blooway)?.name}\n                  </span>\n                  에 멤버 초대\n                </button>\n              )}\n            </Menu.Item>\n\n            <Menu.Item>\n              {({ active }) => (\n                <button\n                  type='button'\n                  onClick={onClickAddArea}\n                  className={`${\n                    active ? 'bg-amber-500 text-white font-semibold' : 'text-slate-800'\n                  } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                >\n                  <CubeIcon className='w-4 mr-1' />\n                  <span className='text-ellipsis line-clamp-1 overflow-hidden max-w-[80px]'>\n                    {userData?.Blooways.find((v) => v.link === blooway)?.name}\n                  </span>\n                  에 에리어 추가\n                </button>\n              )}\n            </Menu.Item>\n            <Menu.Item>\n              {({ active }) => (\n                <button\n                  type='button'\n                  onClick={onClickCreateBlooway}\n                  className={`${\n                    active ? 'bg-amber-500 text-white font-semibold' : 'text-slate-800'\n                  } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                >\n                  <SquaresPlusIcon className='w-4 mr-1' />새 블루웨이 생성\n                </button>\n              )}\n            </Menu.Item>\n            <div className='h-[1.5px] w-full px-4 my-1.5 bg-slate-200'></div>\n            {userData?.Blooways.map((blooway) => {\n              return (\n                <Menu.Item key={blooway.link}>\n                  {({ active }) => (\n                    <Link\n                      to={`/blooway/${blooway.link}/area/전체`}\n                      className={`${\n                        active ? 'bg-amber-500 text-white' : 'text-slate-800'\n                      } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                    >\n                      {blooway.link === 'all' ? (\n                        <UserGroupIcon className='w-4 mr-1' />\n                      ) : blooway.link === userData.username ? (\n                        <UserIcon className='w-4 mr-1' />\n                      ) : (\n                        <Squares2X2Icon className='w-4 mr-1' />\n                      )}\n                      {blooway.name}\n                    </Link>\n                  )}\n                </Menu.Item>\n              );\n            })}\n          </DropMenu>\n          {userData?.username === blooway && (\n            <span className='ml-2 inline-flex items-center rounded-md bg-slate-50 px-2 py-1 text-xs font-medium text-slate-800 ring-1 ring-inset ring-slate-500/10'>\n              Me\n            </span>\n          )}\n          {'all' === blooway && (\n            <span className='ml-2 inline-flex items-center rounded-md bg-slate-50 px-2 py-1 text-xs font-medium text-slate-800 ring-1 ring-inset ring-slate-500/10'>\n              Base\n            </span>\n          )}\n          <span className='hidden md:inline text-xs ml-3 text-slate-500'>\n            {userData?.Blooways.find((v) => v.link === blooway)?.description}\n          </span>\n        </div>\n        <div className='md:flex  hidden items-center text-slate-500 text-sm font- font-normal'>\n          {userData?.email}\n        </div>\n        <div className='flex z-20 md:hidden items-center gap-2.5'>\n          <DropMenu menuTitle='에리어' chevron={true} direction='right'>\n            {areaData?.map((area) => {\n              return (\n                <Menu.Item key={area.id}>\n                  <button className=' group flex w-full items-center rounded-md px-2 py-2 text-sm'>\n                    <AreaItem area={area} />\n                  </button>\n                </Menu.Item>\n              );\n            })}\n          </DropMenu>\n          <DropMenu menuTitle='프라이빗 토크' chevron={true} direction='right'>\n            {memberData?.map((member) => {\n              const isOnline = onlineList.includes(member.id);\n              return (\n                <Menu.Item key={member.id}>\n                  <button className=' group flex w-full items-center rounded-md px-2 py-2 text-sm'>\n                    <PrivateItem member={member} isOnline={isOnline} />\n                  </button>\n                </Menu.Item>\n              );\n            })}\n          </DropMenu>\n        </div>\n      </div>\n      <div id='blooway-side-splitter' className='flex w-full h-full'>\n        <SideBar />\n        <div className='flex w-full md:w-[75%]'>\n          <Switch>\n            <Route path='/blooway/:blooway/area/:area' component={AreaPage} />\n            <Route path='/blooway/:blooway/private/:id' component={PrivatePage} />\n          </Switch>\n        </div>\n      </div>\n      <Modal\n        modalType={0}\n        modalTitle='새로운 블루웨이 생성하기'\n        show={showCreateBloowayModal}\n        onCloseModal={onCloseModal}\n      >\n        <form id='create-blooway-modal' className='w-full' onSubmit={handleSubmit(onCreateBlooway)}>\n          <div className='w-full my-4'>\n            <div>\n              <span>블루웨이 이름</span>\n              <input\n                id='bloowayName'\n                type='text'\n                className='mt-2 relative block w-full appearance-none rounded-md  border border-slate-300 px-3 py-2 text-slate-800 placeholder-slate-400 focus:z-10 focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm'\n                placeholder='2-14자 이내로 입력해주세요'\n                {...register('bloowayName', {\n                  minLength: 2,\n                  onChange: (e) => setValue('bloowayLink', e.target.value),\n                })}\n              />\n            </div>\n            <div className='mt-2'>\n              <span>키워드 링크</span>\n              <input\n                id='bloowayLink'\n                type='text'\n                className='mt-2 relative block w-full appearance-none rounded-md  border border-slate-300 px-3 py-2 text-slate-800 placeholder-slate-400 focus:z-10 focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm'\n                placeholder='링크에 표시할 키워드입니다'\n                {...register('bloowayLink', {\n                  minLength: 2,\n                })}\n              />\n            </div>\n            <div className='mt-2'>\n              <span>블루웨이 정보</span>\n              <input\n                id='description'\n                type='text'\n                className='mt-2 relative block w-full appearance-none rounded-md  border border-slate-300 px-3 py-2 text-slate-800 placeholder-slate-400 focus:z-10 focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm'\n                placeholder='누구나 환영해요'\n                {...register('description', {})}\n              />\n            </div>\n          </div>\n          <div className='flex justify-center'>\n            <button\n              disabled={isSubmitting}\n              type='submit'\n              className='inline-flex justify-center rounded-md border border-transparent bg-amber-500 px-4 py-2 text-sm font-medium text-white hover:bg-amber-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-amber-500 focus-visible:ring-offset-2'\n            >\n              생성하기\n            </button>\n          </div>\n        </form>\n      </Modal>\n      <AddAreaModal\n        show={showAddAreaModal}\n        onCloseModal={onCloseModal}\n        setShowAddAreaModal={setShowAddAreaModal}\n      />\n      <InviteBloowayModal\n        show={showInviteBloowayModal}\n        onCloseModal={onCloseModal}\n        setShowInviteBloowayModal={setShowInviteBloowayModal}\n      />\n\n      <ToastContainer position='bottom-center' />\n    </div>\n  );\n};\n\nexport default Blooway;\n"],"names":["_ref","show","onCloseModal","setShowAddAreaModal","blooway","useParams","userData","useSWR","ApiFetcher","data","revalidateArea","concat","mutate","_useForm","useForm","register","handleSubmit","setValue","isSubmitting","formState","onAddArea","useCallback","formData","areaName","trim","length","toast","toastConfig","axios","name","then","catch","error","_error$response","console","dir","response","React","Modal","modalType","modalTitle","id","className","onSubmit","_extends","type","placeholder","minLength","disabled","setShowInviteBloowayModal","revalidateMember","_useForm$formState","errors","onInviteMember","memberEmail","email","maxLength","pattern","value","message","sockets","disconnect","io","backUrl","transports","on","log","undefined","initialValue","_useState2","useState","e","target","makeSection","talkList","sections","forEach","talk","monthDate","dayjs","createdAt","format","Array","isArray","push","setShowInviteAreaModal","_useParams","area","revalidateMembers","MentionsInputText","styled","MentionsInput","_templateObject","onSubmitForm","onChangeTalk","inPage","onImageUpload","showInviteAreaModal","onKeydownTalk","key","shiftKey","preventDefault","renderUserSuggestion","member","search","highlightedDisplay","index","focus","Avvvatars","size","style","onClickInviteArea","onChange","onKeyPress","wrap","forceSuggestionsAboveCursor","Mention","appendSpaceOnAdd","trigger","map","v","display","username","renderSuggestion","htmlFor","PhotoIcon","multiple","accept","onClick","UserPlusIcon","RocketLaunchIcon","InviteAreaModal","memo","showCarousel","setShowCarousel","user","Sender","User","result","useMemo","content","startsWith","alt","src","regexifyString","decorator","match","matched","Link","to","input","onShowCarousel","onCloseCarousel","NavLink","activeClassName","scrollbarRef","isDataEnd","isEmpty","talkSections","setSize","onScroll","scrollTop","_scrollbarRef$current","_scrollbarRef$current2","current","getScrollHeight","scrollHeight","Scrollbars","autoHide","ref","onScrollFrame","Object","entries","_ref2","_ref3","date","talks","TalkField","_talkData$","_talkData","socket","_slicedToArray","useSocket","areasData","areaData","find","_useSWRInfinite","useSWRInfinite","onSuccess","setTimeout","scrollToBottom","talkData","mutateTalk","areaMembersData","_useInput2","useInput","setTalk","talkArrived","setTalkArrived","useRef","setDragOver","setImageUploaded","_useState8","savedTalk","prevTalkData","_talkData$0$","unshift","UserId","Date","AreaId","Area","localStorage","setItem","getTime","toString","onMessage","getClientHeight","getScrollTop","useEffect","off","onDrop","FormData","dataTransfer","items","i","kind","file","getAsFile","append","files","onTalkArrivedConfirmed","_scrollbarRef$current3","onDragOver","Redirect","apply","reverse","CubeIcon","ChatBubbleOvalLeftEllipsisIcon","TalkList","TalkForm","meData","SenderId","ReceiverId","Receiver","Number","EyeSlashIcon","isOnline","location","useLocation","dedupingInterval","getItem","_useSWR2","unreadCount","pathname","shadow","memberData","onlineList","setOnlineList","includes","Disclosure","PrivateItem","AreaItem","showCta","setShowCta","_useState4","showAddAreaModal","onRemoveCta","onClickAddArea","defaultOpen","as","open","ChevronUpIcon","AreaList","PlusCircleIcon","PrivateList","MegaphoneIcon","fill","viewBox","xmlns","fillRule","d","clipRule","AddAreaModal","_userData$Blooways$fi","_userData$Blooways$fi4","_useSocket2","disconnectSocket","_useSWR","revalidateUser","showCreateBloowayModal","setShowCreateBloowayModal","_useState6","showInviteBloowayModal","onCreateBlooway","bloowayName","bloowayLink","description","link","onClickCreateBlooway","onClickInviteBlooway","emit","areas","Squares2X2Icon","DropMenu","menuTitle","Blooways","chevron","direction","Menu","_userData$Blooways$fi2","active","_userData$Blooways$fi3","SquaresPlusIcon","_ref4","UserGroupIcon","UserIcon","SideBar","Switch","Route","path","component","AreaPage","PrivatePage","InviteBloowayModal","ToastContainer","position"],"sourceRoot":""}