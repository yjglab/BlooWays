{"version":3,"file":"621.js","mappings":"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","sources":["webpack://blooways-front/./components/Modal/index.tsx","webpack://blooways-front/./components/AddAreaModal/index.tsx","webpack://blooways-front/./components/InviteBloowayModal/index.tsx","webpack://blooways-front/./hooks/useSocket.ts","webpack://blooways-front/./hooks/useInput.ts","webpack://blooways-front/./functions/makeSection.ts","webpack://blooways-front/./components/InviteAreaModal/index.tsx","webpack://blooways-front/./components/TalkForm/index.tsx","webpack://blooways-front/./components/TalkField/index.tsx","webpack://blooways-front/./components/TalkList/index.tsx","webpack://blooways-front/./pages/AreaPage/index.tsx","webpack://blooways-front/./pages/PrivatePage/index.tsx","webpack://blooways-front/./components/PrivateItem/index.tsx","webpack://blooways-front/./components/PrivateList/index.tsx","webpack://blooways-front/./components/AreaItem/index.tsx","webpack://blooways-front/./components/AreaList/index.tsx","webpack://blooways-front/./components/SideBar/index.tsx","webpack://blooways-front/./layouts/Blooway/index.tsx"],"sourcesContent":["import React, { FC, Fragment, PropsWithChildren } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\n\ninterface ModalProps {\n  modalType: number;\n  modalTitle: string;\n  show: boolean;\n  onCloseModal: () => void;\n}\n\nconst getNoticeModalColor = (type: number | null) => {\n  switch (type) {\n    case 1:\n      return 'text-amber-500';\n    case 2:\n      return 'text-red-600';\n    default:\n      return 'text-slate-800';\n  }\n};\n\nconst Modal: FC<PropsWithChildren<ModalProps>> = ({\n  modalType,\n  modalTitle,\n  show,\n  children,\n  onCloseModal,\n}) => {\n  if (!show) {\n    return null;\n  }\n  return (\n    <Transition appear show={show} as={Fragment}>\n      <Dialog as='div' className='relative z-10 ' onClose={onCloseModal}>\n        <Transition.Child\n          as={Fragment}\n          enter='ease-out duration-300'\n          enterFrom='opacity-0'\n          enterTo='opacity-100'\n          leave='ease-in duration-200'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div className='fixed inset-0 bg-slate-800 bg-opacity-25 ' />\n        </Transition.Child>\n\n        <div className='fixed inset-0 overflow-y-auto'>\n          <div className='flex min-h-full items-center justify-center p-4 text-center'>\n            <Transition.Child\n              as={Fragment}\n              enter='ease-out duration-300'\n              enterFrom='opacity-0 scale-95'\n              enterTo='opacity-100 scale-100'\n              leave='ease-in duration-200'\n              leaveFrom='opacity-100 scale-100'\n              leaveTo='opacity-0 scale-95'\n            >\n              <Dialog.Panel className='w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all'>\n                <Dialog.Title\n                  as='h3'\n                  className={`text-lg font-semibold leading-6 ${getNoticeModalColor(modalType)}`}\n                >\n                  {modalTitle}\n                </Dialog.Title>\n                <div className='mt-6'>{children}</div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nexport default Modal;\n","import Modal from '@components/Modal';\nimport { Area, User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\nimport { toastConfig } from '@functions/global';\n\ninterface AddAreaModalProps {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowAddAreaModal: (flag: boolean) => void;\n}\nconst AddAreaModal: FC<AddAreaModalProps> = ({ show, onCloseModal, setShowAddAreaModal }) => {\n  const params = useParams<{ blooway?: string }>();\n  const { blooway } = params;\n  const { data: userData } = useSWR<User | false>('/api/users', ApiFetcher);\n  const { mutate: revalidateArea } = useSWR<Area[]>(\n    userData ? `/api/blooways/${blooway}/areas` : null,\n    ApiFetcher,\n  );\n  interface onAddAreaValues {\n    areaName: string;\n  }\n  const {\n    register,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = useForm<onAddAreaValues>();\n\n  const onAddArea: SubmitHandler<onAddAreaValues> = useCallback(\n    (formData) => {\n      const { areaName } = formData;\n      if (!areaName || !areaName.trim()) {\n        return toast.error('에리어 이름을 입력해주세요.', toastConfig);\n      }\n      if (areaName.length > 14) {\n        return toast.error('14자 이내의 에리어 이름을 입력해주세요.', toastConfig);\n      }\n      axios\n        .post(`/api/blooways/${blooway}/areas`, {\n          name: areaName,\n        })\n        .then(() => {\n          revalidateArea();\n          setShowAddAreaModal(false);\n          toast.success(`에리어 ${areaName}를 생성했습니다.`, toastConfig);\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, toastConfig);\n        });\n    },\n    [setShowAddAreaModal, blooway, revalidateArea],\n  );\n\n  return (\n    <Modal modalType={0} modalTitle='새로운 에리어 추가하기' show={show} onCloseModal={onCloseModal}>\n      <form id='add-area-modal' className='w-full' onSubmit={handleSubmit(onAddArea)}>\n        <div className='w-full my-4'>\n          <span>에리어 이름</span>\n          <input\n            id='areaName'\n            type='text'\n            className='mt-2 relative block w-full appearance-none rounded-md  border border-slate-300 px-3 py-2 text-slate-800 placeholder-slate-500 focus:z-10 focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm'\n            placeholder='2-14자 이내로 설정해주세요'\n            {...register('areaName', {\n              minLength: 2,\n            })}\n          />\n        </div>\n        <div className='flex justify-center'>\n          <button\n            disabled={isSubmitting}\n            type='submit'\n            className='inline-flex justify-center rounded-md border border-transparent bg-amber-500 px-4 py-2 text-sm font-medium text-white hover:bg-amber-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-amber-500 focus-visible:ring-offset-2'\n          >\n            생성하기\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default AddAreaModal;\n","import Modal from '@components/Modal';\nimport { User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { toastConfig } from '@functions/global';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteBloowayModal: (flag: boolean) => void;\n}\nconst InviteBloowayModal: FC<Props> = ({ show, onCloseModal, setShowInviteBloowayModal }) => {\n  const { blooway } = useParams<{ blooway: string; area: string }>();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher);\n  const { mutate: revalidateMember } = useSWR<User[]>(\n    userData ? `/api/blooways/${blooway}/members` : null,\n    ApiFetcher,\n  );\n\n  interface InviteMemberValues {\n    memberEmail: string;\n  }\n  const {\n    register,\n    handleSubmit,\n    formState: { isSubmitting, errors },\n  } = useForm<InviteMemberValues>();\n  const onInviteMember: SubmitHandler<InviteMemberValues> = useCallback(\n    (formData) => {\n      const { memberEmail } = formData;\n      if (!memberEmail || !memberEmail.trim()) {\n        return toast.error('초대할 멤버의 이메일을 입력해주세요', toastConfig);\n      }\n      axios\n        .post(`/api/blooways/${blooway}/members`, {\n          email: memberEmail,\n        })\n        .then(() => {\n          revalidateMember();\n          setShowInviteBloowayModal(false);\n          toast.success(`${memberEmail}님을 ${blooway} 블루웨이에 초대했습니다.`, toastConfig);\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, toastConfig);\n        });\n    },\n    [blooway, revalidateMember, setShowInviteBloowayModal],\n  );\n\n  return (\n    <Modal modalType={0} modalTitle='블루웨이에 멤버 초대하기' show={show} onCloseModal={onCloseModal}>\n      <form id='invite-blooway-modal' className='w-full' onSubmit={handleSubmit(onInviteMember)}>\n        <div className='w-full my-4'>\n          <span>멤버 이메일</span>\n          <input\n            id='memberEmail'\n            type='text'\n            className='mt-2 relative block w-full appearance-none rounded-md  border border-slate-300 px-3 py-2 text-slate-800 placeholder-slate-500 focus:z-10 focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm'\n            placeholder='이메일 주소'\n            {...register('memberEmail', {\n              maxLength: 100,\n              pattern: {\n                value: /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i,\n                message: '이메일 형식에 맞지 않습니다',\n              },\n            })}\n          />\n        </div>\n        <div className='flex justify-center flex-col'>\n          <span className='text-xs mx-auto text-amber-500 mb-3'>\n            {errors.memberEmail && errors.memberEmail.message}\n          </span>\n          <button\n            disabled={isSubmitting}\n            type='submit'\n            className='inline-flex justify-center rounded-md border border-transparent bg-amber-500 px-4 py-2 text-sm font-medium text-white hover:bg-amber-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-amber-500 focus-visible:ring-offset-2'\n          >\n            초대하기\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteBloowayModal;\n","import { backUrl } from '@functions/global';\nimport { useCallback } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\nconst sockets: { [key: string]: Socket } = {};\nconst useSocket = (blooway?: string): [Socket | undefined, () => void] => {\n  const disconnect = useCallback(() => {\n    if (blooway && sockets[blooway]) {\n      // console.log('💠 Socket Disconnected');\n      sockets[blooway].disconnect();\n      delete sockets[blooway];\n    }\n  }, [blooway]);\n  if (!blooway) {\n    return [undefined, disconnect];\n  }\n  if (!sockets[blooway]) {\n    // 연결된 소켓이 없었으면\n    sockets[blooway] = io(`${backUrl}/bw-${blooway}`, {\n      transports: ['websocket'],\n    });\n    // console.info('새 소켓 생성', blooway, sockets[blooway]);\n    sockets[blooway].on('connect_error', (error) => {\n      console.error(error);\n      console.log(`connect_error due to ${error.message}`);\n    });\n  }\n  // 이미 연결된 소켓이 있으면 기존 소켓 리턴\n  return [sockets[blooway], disconnect];\n};\n\nexport default useSocket;\n","import { Dispatch, SetStateAction, useCallback, useState } from 'react';\n\ntype Handler = (e: any) => void;\ntype ReturnTypes<T = any> = [T, Handler, Dispatch<SetStateAction<T>>];\nconst useInput = <T = any>(initialValue: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialValue);\n  const handler = useCallback((e: any) => {\n    setValue(e.target.value);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import { Talk, Private } from '@typings/types';\nimport dayjs from 'dayjs';\n\nexport default function makeSection<T extends Private | Talk>(talkList: T[]) {\n  const sections: { [key: string]: T[] } = {};\n  talkList.forEach((talk) => {\n    const monthDate = dayjs(talk.createdAt).format('YYYY-MM-DD');\n    if (Array.isArray(sections[monthDate])) {\n      sections[monthDate].push(talk);\n    } else {\n      sections[monthDate] = [talk];\n    }\n  });\n  return sections;\n}\n","import Modal from '@components/Modal';\nimport { User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { toastConfig } from '@functions/global';\n\ninterface InviteAreaModalProps {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteAreaModal: (flag: boolean) => void;\n}\nconst InviteAreaModal: FC<InviteAreaModalProps> = ({ show, onCloseModal, setShowInviteAreaModal }) => {\n  const { blooway, area } = useParams<{ blooway: string; area: string }>();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher);\n  const { mutate: revalidateMembers } = useSWR<User[]>(\n    userData ? `/api/blooways/${blooway}/areas/${area}/members` : null,\n    ApiFetcher,\n  );\n\n  interface InviteMemberValues {\n    memberEmail: string;\n  }\n  const {\n    register,\n    handleSubmit,\n    formState: { isSubmitting, errors },\n  } = useForm<InviteMemberValues>();\n  const onInviteMember: SubmitHandler<InviteMemberValues> = useCallback(\n    (formData) => {\n      const { memberEmail } = formData;\n      if (!memberEmail || !memberEmail.trim()) {\n        return toast.error('초대할 멤버의 이메일을 입력해주세요', toastConfig);\n      }\n      axios\n        .post(`/api/blooways/${blooway}/areas/${area}/members`, {\n          email: memberEmail,\n        })\n        .then(() => {\n          revalidateMembers();\n          setShowInviteAreaModal(false);\n          toast.success(`${memberEmail}님을 ${area} 에리어에 초대했습니다.`, toastConfig);\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, toastConfig);\n        });\n    },\n    [area, revalidateMembers, setShowInviteAreaModal, blooway],\n  );\n\n  return (\n    <Modal\n      modalType={0}\n      modalTitle={`${area} 에리어에 멤버 초대하기`}\n      show={show}\n      onCloseModal={onCloseModal}\n    >\n      <form id='invite-area-modal' className='w-full' onSubmit={handleSubmit(onInviteMember)}>\n        <div className='w-full my-4'>\n          <span>멤버 이메일</span>\n          <input\n            id='memberEmail'\n            type='text'\n            className='mt-2 relative block w-full appearance-none rounded-md  border border-slate-300 px-3 py-2 text-slate-800 placeholder-slate-500 focus:z-10 focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm'\n            placeholder='이메일 주소'\n            {...register('memberEmail', {\n              maxLength: 100,\n              pattern: {\n                value: /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i,\n                message: '이메일 형식에 맞지 않습니다',\n              },\n            })}\n          />\n        </div>\n        <div className='flex justify-center flex-col'>\n          <span className='text-xs mx-auto text-amber-500 mb-3'>\n            {errors.memberEmail && errors.memberEmail.message}\n          </span>\n          <button\n            disabled={isSubmitting}\n            type='submit'\n            className='inline-flex justify-center rounded-md border border-transparent bg-amber-500 px-4 py-2 text-sm font-medium text-white hover:bg-amber-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-amber-500 focus-visible:ring-offset-2'\n          >\n            초대하기\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteAreaModal;\n","import InviteAreaModal from '@components/InviteAreaModal';\nimport { PhotoIcon, RocketLaunchIcon, UserPlusIcon } from '@heroicons/react/20/solid';\nimport { User } from '@typings/types';\nimport Avvvatars from 'avvvatars-react';\nimport React, { FC, useCallback, useState } from 'react';\nimport { Mention, MentionsInput, SuggestionDataItem } from 'react-mentions';\nimport styled from 'styled-components';\n\nexport const MentionsInputText = styled(MentionsInput)`\n  padding: 10px;\n\n  & textarea {\n    height: 80px;\n    padding: 9px 10px !important;\n    outline: none !important;\n    border-top-left-radius: 10px !important;\n    border-top-right-radius: 10px !important;\n    resize: none !important;\n    line-height: 22px;\n    border: none;\n    ::placeholder {\n      color: #b4b4b4;\n      font-size: 14px;\n    }\n    &:focus {\n      border-color: #cccccc;\n      -webkit-box-shadow: none;\n      box-shadow: none;\n    }\n  }\n`;\n\ninterface TalkFormProps {\n  onSubmitForm: (e: any) => void;\n  talk?: string;\n  onChangeTalk: (e: any) => void;\n  placeholder: string;\n  data?: User[];\n  inPage: string;\n  onImageUpload: (e: any) => void;\n}\nconst TalkForm: FC<TalkFormProps> = ({\n  onSubmitForm,\n  talk,\n  onChangeTalk,\n  placeholder,\n  data,\n  inPage,\n  onImageUpload,\n}) => {\n  const [showInviteAreaModal, setShowInviteAreaModal] = useState(false);\n\n  const onKeydownTalk = useCallback(\n    (e: any) => {\n      if (e.key === 'Enter') {\n        if (!e.shiftKey) {\n          e.preventDefault();\n          onSubmitForm(e);\n        }\n      }\n    },\n    [onSubmitForm],\n  );\n\n  const renderUserSuggestion: (\n    suggestion: SuggestionDataItem,\n    search: string,\n    highlightedDisplay: React.ReactNode,\n    index: number,\n    focused: boolean,\n  ) => React.ReactNode = useCallback(\n    (member, search, highlightedDisplay, index, focus) => {\n      if (!data) {\n        return null;\n      }\n      return (\n        <button\n          className={`${\n            focus && 'bg-amber-500 text-white'\n          } gap-1 text-xs rounded-md px-1 relative bottom-1 py-1 flex border-none items-center w-full`}\n        >\n          <Avvvatars size={18} style='shape' value={data[index].email} />\n          <span>{highlightedDisplay}</span>\n        </button>\n      );\n    },\n    [data],\n  );\n\n  const onClickInviteArea = useCallback(() => {\n    setShowInviteAreaModal(true);\n  }, []);\n  const onCloseModal = useCallback(() => {\n    setShowInviteAreaModal(false);\n  }, []);\n\n  return (\n    <div id='talk-form' className='pb-5 w-full flex pt-0'>\n      <form onSubmit={onSubmitForm} className='w-full border rounded-lg'>\n        <MentionsInputText\n          id='talk'\n          value={talk}\n          onChange={onChangeTalk}\n          onKeyPress={onKeydownTalk}\n          placeholder={placeholder}\n          wrap='hard'\n          forceSuggestionsAboveCursor\n          className='h-20 text-sm md:text-base'\n        >\n          <Mention\n            appendSpaceOnAdd\n            trigger='@'\n            data={data?.map((v) => ({ id: v.id, display: v.username })) || []}\n            renderSuggestion={renderUserSuggestion}\n          />\n        </MentionsInputText>\n        <div className='flex justify-between relative items-center px-2 h-9 bg-slate-100'>\n          <div className='flex items-center'>\n            <label\n              htmlFor='imageUpload'\n              className='cursor-pointer hover:text-amber-500 flex h-9 w-9 items-center justify-center rounded-lg'\n            >\n              <PhotoIcon className='h-6 w-6' aria-hidden='true' />\n            </label>\n            <input\n              id='imageUpload'\n              type='file'\n              multiple\n              accept='image/*'\n              className='hidden'\n              onChange={onImageUpload}\n            />\n            {inPage === 'area' && (\n              <button\n                type='button'\n                onClick={onClickInviteArea}\n                className='flex justify-center items-center p-1 rounded-md duration-200'\n              >\n                <UserPlusIcon className='text-slate-800 hover:text-amber-500 w-5' />\n              </button>\n            )}\n            {inPage === 'private' && (\n              <div className='flex justify-center items-center p-1 text-slate-800 rounded-md duration-200'></div>\n            )}\n          </div>\n\n          <button\n            type='submit'\n            className={`${\n              talk?.trim() && 'bg-amber-500 shadow '\n            } flex justify-center items-center p-1 rounded-md  duration-200`}\n          >\n            <RocketLaunchIcon\n              className={`${talk?.trim() ? 'hover:scale-105 text-white' : 'text-slate-300'}  w-5 `}\n            />\n          </button>\n        </div>\n      </form>\n      {inPage === 'area' && (\n        <InviteAreaModal\n          show={showInviteAreaModal}\n          onCloseModal={onCloseModal}\n          setShowInviteAreaModal={setShowInviteAreaModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TalkForm;\n","import { backUrl } from '@functions/global';\nimport { Talk, Private, User } from '@typings/types';\nimport Avvvatars from 'avvvatars-react';\nimport dayjs from 'dayjs';\nimport React, { FC, useMemo, memo, useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link, NavLink } from 'react-router-dom';\nimport regexifyString from 'regexify-string';\n\ninterface TalkFieldProps {\n  data: Private | Talk;\n}\nconst TalkField: FC<TalkFieldProps> = memo(({ data }) => {\n  const [showCarousel, setShowCarousel] = useState(false);\n  const { blooway } = useParams<{ blooway: string; area: string }>();\n  const user: User = 'Sender' in data ? data.Sender : data.User;\n  const result = useMemo<(string | JSX.Element)[] | JSX.Element>(\n    () =>\n      data.content.startsWith('uploads\\\\') ||\n      data.content.startsWith('uploads/') ||\n      data.content.startsWith('https://bloowaysbucket') ? (\n        <img\n          id='image'\n          src={process.env.NODE_ENV === 'production' ? `${data.content}` : `${backUrl + '/' + data.content}`}\n          className='max-h-52'\n        />\n      ) : (\n        regexifyString({\n          pattern: /@\\[(.+?)]\\((\\d+?)\\)|\\n/g,\n          decorator(match, index) {\n            const matched: string[] | null = match.match(/@\\[(.+?)]\\((\\d+?)\\)/)!;\n            if (matched) {\n              return (\n                <Link key={match + index} to={`/blooway/${blooway}/private/${matched[2]}`}>\n                  @{matched[1]}\n                </Link>\n              );\n            }\n            return <br key={index} />;\n          },\n          input: data.content,\n        })\n      ),\n    [blooway, data.content],\n  );\n  const onShowCarousel = useCallback((e: any) => {\n    if (e.target.id === 'image') {\n      setShowCarousel(true);\n    }\n  }, []);\n  const onCloseCarousel = useCallback(() => {\n    setShowCarousel(false);\n  }, []);\n  return (\n    <div className='my-1 pt-1.5 pb-3.5 px-2 pr-6 duration-200 rounded-lg hover:bg-slate-100 flex w-full flex-col'>\n      <div className='flex w-full justify-between items-center'>\n        <NavLink\n          className='flex items-center'\n          activeClassName='text-amber-500 font-semibold'\n          to={`/blooway/${blooway}/private/${user.id}`}\n        >\n          <Avvvatars size={32} style='shape' value={user.email} />\n          <div className='ml-2 text-md font-semibold text-slate-800'>{user.username}</div>\n        </NavLink>\n        <div className='flex items-center mt-1 text-xs leading-5 text-slate-400'>\n          <span>{dayjs(data.createdAt).format('A h:mm')}</span>\n        </div>\n      </div>\n\n      <p onClick={onShowCarousel} className='break-words whitespace-pre-line ml-10 text-sm'>\n        {result}\n      </p>\n      {showCarousel && (\n        <div\n          onClick={onCloseCarousel}\n          className='p-3 z-40 bg-slate-800/70  fixed w-full h-full top-0 left-0 flex items-center [&>img]:w-full [&>img]:h-auto [&>img]:shadow-lg [&>img]:shadow-slate-800/80 [&>img]:max-h-full'\n        >\n          {result}\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default TalkField;\n","import TalkField from '@components/TalkField';\nimport { Talk, Private } from '@typings/types';\nimport React, { FC, RefObject, useCallback } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\ninterface TalkListProps {\n  scrollbarRef: RefObject<Scrollbars>;\n  isDataEnd?: boolean;\n  isEmpty: boolean;\n  talkSections: { [key: string]: (Private | Talk)[] };\n  setSize: (f: (size: number) => number) => Promise<(Private | Talk)[][] | undefined>;\n}\nconst TalkList: FC<TalkListProps> = ({ scrollbarRef, isDataEnd, isEmpty, talkSections, setSize }) => {\n  const onScroll = useCallback(\n    (e: any) => {\n      if (e.scrollTop === 0 && !isDataEnd && !isEmpty) {\n        setSize((size) => size + 1).then(() => {\n          scrollbarRef.current?.scrollTop(scrollbarRef.current?.getScrollHeight() - e.scrollHeight);\n        });\n      }\n    },\n    [setSize, scrollbarRef, isDataEnd, isEmpty],\n  );\n\n  return (\n    <div id='talk-list' className='overflow-x-hidden w-full h-full flex'>\n      <Scrollbars autoHide ref={scrollbarRef} onScrollFrame={onScroll}>\n        {Object.entries(talkSections).map(([date, talks]) => {\n          return (\n            <section className={`section-${date}`} key={date}>\n              <div\n                id='talklist-bar'\n                className='flex items-center overflow-x-hidden justify-center flex-[1] w-full sticky top-[7px] md:top-[12px]'\n              >\n                <div className='absolute left-2'>{}</div>\n                <div className='ml-2 inline-flex items-center rounded-md bg-slate-50 px-2 py-1 text-xs font-medium text-slate-800 ring-1 ring-inset ring-slate-500/10'>\n                  {date}\n                </div>\n              </div>\n              {talks.map((talk) => (\n                <TalkField key={talk.id} data={talk} />\n              ))}\n            </section>\n          );\n        })}\n      </Scrollbars>\n    </div>\n  );\n};\n\nexport default TalkList;\n","import useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport { Area, Talk, User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport makeSection from '@functions/makeSection';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { useParams } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\nimport TalkForm from '@components/TalkForm';\nimport TalkList from '@components/TalkList';\nimport { ChatBubbleOvalLeftEllipsisIcon, CubeIcon, UserPlusIcon } from '@heroicons/react/20/solid';\nimport InviteAreaModal from '@components/InviteAreaModal';\n\nconst PAGE_SIZE = 20;\nconst AreaPage = () => {\n  const { blooway, area } = useParams<{ blooway: string; area: string }>();\n  const [socket] = useSocket(blooway);\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher);\n  const { data: areasData } = useSWR<Area[]>(`/api/blooways/${blooway}/areas`, ApiFetcher);\n  const areaData = areasData?.find((v) => v.name === area);\n\n  const {\n    data: talkData,\n    mutate: mutateTalk,\n    setSize,\n  } = useSWRInfinite<Talk[]>(\n    (index) => `/api/blooways/${blooway}/areas/${area}/talks?perPage=${PAGE_SIZE}&page=${index + 1}`,\n    ApiFetcher,\n    {\n      onSuccess(data) {\n        if (data?.length === 1) {\n          setTimeout(() => {\n            scrollbarRef.current?.scrollToBottom();\n          }, 100);\n        }\n      },\n    },\n  );\n  const { data: areaMembersData } = useSWR<User[]>(\n    userData ? `/api/blooways/${blooway}/areas/${area}/members` : null,\n    ApiFetcher,\n  );\n  const [talk, onChangeTalk, setTalk] = useInput('');\n  const [talkArrived, setTalkArrived] = useState(false);\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [, setDragOver] = useState(false);\n  const [, setImageUploaded] = useState(false);\n  const [showInviteAreaModal, setShowInviteAreaModal] = useState(false);\n  const isEmpty = talkData?.[0]?.length === 0;\n  const isDataEnd = isEmpty || (talkData && talkData[talkData.length - 1]?.length < PAGE_SIZE);\n\n  const onSubmitForm = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      if (talk?.trim() && talkData && areaData && userData) {\n        const savedTalk = talk;\n        mutateTalk((prevTalkData) => {\n          prevTalkData?.[0].unshift({\n            id: (talkData[0][0]?.id || 0) + 1,\n            content: savedTalk,\n            UserId: userData.id, // Sender, 에리어에서는 받는 사람은 필요없고 보내는 사람만 있어도 ok.\n            User: userData,\n            createdAt: new Date(),\n            AreaId: areaData.id,\n            Area: areaData,\n          });\n          return prevTalkData;\n        }, false).then(() => {\n          localStorage.setItem(`${blooway}-${area}`, new Date().getTime().toString());\n          setTalk('');\n          setTalkArrived(false);\n          if (scrollbarRef.current) {\n            scrollbarRef.current.scrollToBottom();\n          }\n        });\n        axios\n          .post(`/api/blooways/${blooway}/areas/${area}/talks`, {\n            content: savedTalk,\n          })\n          .catch(console.error);\n      }\n    },\n    [talk, blooway, area, areaData, userData, talkData, mutateTalk, setTalk],\n  );\n\n  const onMessage = useCallback(\n    (data: Talk) => {\n      if (\n        data.Area.name === area &&\n        (data.content.startsWith('uploads\\\\') ||\n          data.content.startsWith('uploads/') ||\n          data.UserId !== userData?.id)\n      ) {\n        mutateTalk((talkData) => {\n          talkData?.[0].unshift(data);\n          return talkData;\n        }, false).then(() => {\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              setTalkArrived(false);\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 100);\n            } else {\n              setTalkArrived(true);\n            }\n          }\n        });\n      }\n    },\n    [area, userData, mutateTalk],\n  );\n\n  useEffect(() => {\n    socket?.on('message', onMessage);\n    return () => {\n      socket?.off('message', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    localStorage.setItem(`${blooway}-${area}`, new Date().getTime().toString());\n  }, [blooway, area]);\n\n  const onDrop = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            formData.append('image', file);\n          }\n        }\n      } else {\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`/api/blooways/${blooway}/areas/${area}/images`, formData).then(() => {\n        setDragOver(false);\n        localStorage.setItem(`${blooway}-${area}`, new Date().getTime().toString());\n      });\n    },\n    [blooway, area],\n  );\n  const onImageUpload = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const formData = new FormData();\n      for (let i = 0; i < e.target.files.length; i++) {\n        formData.append('image', e.target.files[i]);\n      }\n      axios.post(`/api/blooways/${blooway}/areas/${area}/images`, formData).then(() => {\n        setImageUploaded(true);\n        localStorage.setItem(`${blooway}-${area}`, new Date().getTime().toString());\n        setImageUploaded(false);\n      });\n    },\n    [blooway, area],\n  );\n  const onClickInviteArea = useCallback(() => {\n    setShowInviteAreaModal(true);\n  }, []);\n  const onTalkArrivedConfirmed = useCallback(() => {\n    setTalkArrived(false);\n    scrollbarRef.current?.scrollToBottom();\n  }, []);\n  const onDragOver = useCallback((e: any) => {\n    e.preventDefault();\n    setDragOver(true);\n  }, []);\n  const onCloseModal = useCallback(() => {\n    setShowInviteAreaModal(false);\n  }, []);\n  if (areasData && !areaData) {\n    return <Redirect to={`/blooway/${blooway}/area/전체`} />;\n  }\n\n  const talkSections = makeSection(talkData ? ([] as Talk[]).concat(...talkData).reverse() : []);\n\n  return (\n    <div\n      id='area-page'\n      className='flex flex-col overflow-x-hidden w-full h-full relative '\n      onDrop={onDrop}\n      onDragOver={onDragOver}\n    >\n      <div\n        id='mobile-area-pointer'\n        className='flex items-center w-full justify-between absolute top-2 md:top-3 left-1 text-sm z-10'\n      >\n        <div className='flex items-center bg-amber-500 text-white px-1.5 py-0.5 rounded-md '>\n          <CubeIcon className='w-4 mr-0.5' />\n          <span className='max-w-[65px] md:max-w-[150px] text-ellipsis overflow-hidden'>{area}</span>\n        </div>\n        <button\n          onClick={onClickInviteArea}\n          type='button'\n          className='hover:bg-slate-900 flex items-center bg-slate-800 text-white px-1.5 relative right-2 py-0.5 rounded-md '\n        >\n          <UserPlusIcon className='w-4 mr-1' />\n          멤버\n        </button>\n      </div>\n      {isEmpty && (\n        <div className='relative text-sm text-center w-full h-full flex items-center justify-center'>\n          내용이 없습니다\n          <br />\n          메시지를 보내서 멤버들과 토크를 시작해보세요!\n        </div>\n      )}\n      {talkArrived && (\n        <button\n          type='button'\n          onClick={onTalkArrivedConfirmed}\n          className=' hover:bg-amber-600 absolute bottom-40 animate-bounce mx-auto z-10 left-0 right-0 px-2 py-0.5 w-[85px] flex items-center justify-center text-sm font-medium bg-amber-500 text-white rounded-md'\n        >\n          <ChatBubbleOvalLeftEllipsisIcon className=' w-4 mr-0.5' />새 토크\n        </button>\n      )}\n\n      <TalkList\n        scrollbarRef={scrollbarRef}\n        isDataEnd={isDataEnd}\n        isEmpty={isEmpty}\n        talkSections={talkSections}\n        setSize={setSize}\n      />\n      <TalkForm\n        onSubmitForm={onSubmitForm}\n        talk={talk}\n        onChangeTalk={onChangeTalk}\n        placeholder={`${area} 에리어에 토크`}\n        data={areaMembersData}\n        inPage='area'\n        onImageUpload={onImageUpload}\n      />\n\n      <InviteAreaModal\n        show={showInviteAreaModal}\n        onCloseModal={onCloseModal}\n        setShowInviteAreaModal={setShowInviteAreaModal}\n      />\n    </div>\n  );\n};\n\nexport default AreaPage;\n","import TalkForm from '@components/TalkForm';\nimport TalkList from '@components/TalkList';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport { Private } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { useParams } from 'react-router';\nimport makeSection from '@functions/makeSection';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\nimport { ChatBubbleOvalLeftEllipsisIcon, EyeSlashIcon } from '@heroicons/react/20/solid';\n\nconst PAGE_SIZE = 20;\nconst PrivatePage: FC = () => {\n  const { blooway, id } = useParams<{ blooway: string; id: string }>();\n  const [socket] = useSocket(blooway);\n  const { data: meData } = useSWR('/api/users', ApiFetcher);\n  const { data: userData } = useSWR(`/api/blooways/${blooway}/users/${id}`, ApiFetcher);\n  const {\n    data: talkData,\n    mutate: mutateTalk,\n    setSize, // setSize: 페이지 수를 변경\n  } = useSWRInfinite<Private[]>(\n    (index) => `/api/blooways/${blooway}/privates/${id}/talks?perPage=${PAGE_SIZE}&page=${index + 1}`,\n    ApiFetcher,\n    {\n      onSuccess(data) {\n        if (data?.length === 1) {\n          setTimeout(() => {\n            scrollbarRef.current?.scrollToBottom();\n          }, 100);\n        }\n      },\n    },\n  );\n  const [talk, onChangeTalk, setTalk] = useInput('');\n  const [talkArrived, setTalkArrived] = useState(false);\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [, setDragOver] = useState(false);\n\n  const isEmpty = talkData?.[0]?.length === 0;\n  const isDataEnd = isEmpty || (talkData && talkData[talkData.length - 1]?.length < PAGE_SIZE);\n\n  const onSubmitForm = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      if (talk?.trim() && talkData) {\n        const savedTalk = talk;\n        // optimistic ui, optimistic ui 사용 후에는 shouldRevalidate가 false여야 함.\n        mutateTalk((prevTalkData) => {\n          prevTalkData?.[0].unshift({\n            id: (talkData[0][0]?.id || 0) + 1,\n            content: savedTalk,\n            SenderId: meData.id,\n            Sender: meData,\n            ReceiverId: userData.id,\n            Receiver: userData,\n            createdAt: new Date(),\n          });\n          return prevTalkData;\n        }, false).then(() => {\n          localStorage.setItem(`${blooway}-${id}`, new Date().getTime().toString());\n          setTalk('');\n          setTalkArrived(false);\n          if (scrollbarRef.current) {\n            scrollbarRef.current.scrollToBottom();\n          }\n        });\n        axios\n          .post(`/api/blooways/${blooway}/privates/${id}/talks`, {\n            content: talk,\n          })\n          .catch(console.error);\n      }\n    },\n    [talk, blooway, id, meData, userData, talkData, mutateTalk, setTalk],\n  );\n\n  const onMessage = useCallback(\n    (data: Private) => {\n      // id는 상대방 id\n      if (data.SenderId === Number(id) && meData.id !== Number(id)) {\n        mutateTalk((talkData) => {\n          talkData?.[0].unshift(data);\n          return talkData;\n        }, false).then(() => {\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              setTalkArrived(false);\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 100);\n            } else {\n              setTalkArrived(true);\n            }\n          }\n        });\n      }\n    },\n    [id, meData, mutateTalk],\n  );\n\n  useEffect(() => {\n    socket?.on('private', onMessage);\n    return () => {\n      socket?.off('private', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    localStorage.setItem(`${blooway}-${id}`, new Date().getTime().toString());\n  }, [blooway, id]);\n\n  const onDrop = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            // console.log('... file[' + i + '].name = ' + file.name);\n            formData.append('image', file);\n          }\n        }\n      } else {\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          // console.log('... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`/api/blooways/${blooway}/privates/${id}/images`, formData).then(() => {\n        setDragOver(false);\n        localStorage.setItem(`${blooway}-${id}`, new Date().getTime().toString());\n        mutateTalk();\n      });\n    },\n    [blooway, id, mutateTalk],\n  );\n  const onImageUpload = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const formData = new FormData();\n      for (let i = 0; i < e.target.files.length; i++) {\n        formData.append('image', e.target.files[i]);\n      }\n      axios.post(`/api/blooways/${blooway}/privates/${id}/images`, formData).then(() => {\n        localStorage.setItem(`${blooway}-${id}`, new Date().getTime().toString());\n        mutateTalk();\n      });\n    },\n    [blooway, id, mutateTalk],\n  );\n  const onTalkArrivedConfirmed = useCallback(() => {\n    setTalkArrived(false);\n    scrollbarRef.current?.scrollToBottom();\n  }, []);\n  const onDragOver = useCallback((e: any) => {\n    e.preventDefault();\n    setDragOver(true);\n  }, []);\n\n  if (!userData || !meData) {\n    return null;\n  }\n\n  const talkSections = makeSection(talkData ? ([] as Private[]).concat(...talkData).reverse() : []);\n\n  return (\n    <div\n      className='flex flex-col overflow-x-hidden w-full h-full relative '\n      onDrop={onDrop}\n      onDragOver={onDragOver}\n    >\n      <div\n        id='mobile-private-pointer'\n        className='flex items-center absolute top-2 md:top-3 left-1 text-sm z-10 rounded-md px-1.5 py-0.5 bg-amber-500 text-white'\n      >\n        <EyeSlashIcon className='w-4 mr-0.5' />\n        <span className='max-w-[65px] md:max-w-[150px] text-ellipsis overflow-hidden'>\n          {userData.username}\n        </span>\n      </div>\n      {isEmpty && (\n        <div className='relative text-sm text-center w-full h-full flex items-center justify-center'>\n          내용이 없습니다\n          <br />\n          메시지를 보내서 멤버들과 토크를 시작해보세요!\n        </div>\n      )}\n      {talkArrived && (\n        <button\n          type='button'\n          onClick={onTalkArrivedConfirmed}\n          className=' hover:bg-amber-600 absolute bottom-40 animate-bounce mx-auto z-10 left-0 right-0 px-2 py-0.5 w-[85px] flex items-center justify-center text-sm font-medium bg-amber-500 text-white rounded-md'\n        >\n          <ChatBubbleOvalLeftEllipsisIcon className=' w-4 mr-0.5' />새 토크\n        </button>\n      )}\n      <TalkList\n        scrollbarRef={scrollbarRef}\n        isDataEnd={isDataEnd}\n        isEmpty={isEmpty}\n        talkSections={talkSections}\n        setSize={setSize}\n      />\n      <TalkForm\n        onSubmitForm={onSubmitForm}\n        talk={talk}\n        onChangeTalk={onChangeTalk}\n        placeholder={`${userData.username}에게 프라이빗 토크`}\n        data={[]}\n        inPage='private'\n        onImageUpload={onImageUpload}\n      />\n    </div>\n  );\n};\n\nexport default PrivatePage;\n","import { User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport React, { FC, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSWR from 'swr';\nimport Avvvatars from 'avvvatars-react';\n\ninterface PrivateItemProps {\n  member: User;\n  isOnline: boolean;\n}\nconst PrivateItem: FC<PrivateItemProps> = ({ member, isOnline }) => {\n  const { blooway } = useParams<{ blooway?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher, {\n    dedupingInterval: 2000,\n  });\n  const date = localStorage.getItem(`${blooway}-${member.id}`) || 0;\n  const { data: unreadCount, mutate } = useSWR<number>(\n    userData ? `/api/blooways/${blooway}/privates/${member.id}/unreads?after=${date}` : null,\n    ApiFetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/blooway/${blooway}/private/${member.id}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, blooway, member]);\n\n  return (\n    <NavLink\n      key={member.id}\n      className='flex items-center w-full'\n      activeClassName='text-amber-500 font-semibold'\n      to={`/blooway/${blooway}/private/${member.id}`}\n    >\n      <div className='relative'>\n        <Avvvatars size={24} shadow={true} style='shape' value={member.email} />\n        <div\n          className={`${\n            isOnline ? 'bg-emerald-400' : 'bg-slate-400'\n          } absolute right-0 bottom-0 border border-white w-[9px] h-[9px] rounded-full`}\n        ></div>\n      </div>\n      <span className='hover:text-amber-500 ml-1.5 overflow-hidden text-ellipsis max-w-[120px]'>\n        {member.username}\n      </span>\n      {member.id === userData?.id && <span className='ml-0.5'>(나)</span>}\n      {unreadCount !== undefined && unreadCount > 0 && (\n        <div\n          id='unread-count'\n          className='bg-amber-500 text-white ml-1.5 rounded-full w-4 h-4 text-[6px] p-1 flex justify-center items-center'\n        >\n          {unreadCount}\n        </div>\n      )}\n    </NavLink>\n  );\n};\n\nexport default PrivateItem;\n","import PrivateItem from '@components/PrivateItem';\nimport useSocket from '@hooks/useSocket';\nimport { User, UserWithOnline } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\nimport { Disclosure } from '@headlessui/react';\n\nconst PrivateList: FC = () => {\n  const { blooway } = useParams<{ blooway?: string }>();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: memberData } = useSWR<UserWithOnline[]>(\n    userData ? `/api/blooways/${blooway}/members` : null,\n    ApiFetcher,\n  );\n  const [socket] = useSocket(blooway);\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  useEffect(() => {\n    setOnlineList([]);\n  }, [blooway]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    // console.log('socket on private', socket?.hasListeners('private'), socket);\n    return () => {\n      // console.log('socket off private', socket?.hasListeners('private'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  return (\n    <>\n      <div>\n        {memberData?.map((member) => {\n          const isOnline = onlineList.includes(member.id);\n          return (\n            <Disclosure.Panel key={member.id} className='px-4 py-1.5 text-sm'>\n              <PrivateItem member={member} isOnline={isOnline} />\n            </Disclosure.Panel>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default PrivateList;\n","import { Area, User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport React, { FC, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSWR from 'swr';\n\ninterface AreaItemProps {\n  area: Area;\n}\nconst AreaItem: FC<AreaItemProps> = ({ area }) => {\n  const { blooway } = useParams<{ blooway?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher, {\n    dedupingInterval: 2000,\n  });\n  const date = localStorage.getItem(`${blooway}-${area.name}`) || 0;\n  const { data: unreadCount, mutate } = useSWR<number>(\n    userData ? `/api/blooways/${blooway}/areas/${area.name}/unreads?after=${date}` : null,\n    ApiFetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/blooway/${blooway}/area/${area.name}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, blooway, area]);\n\n  return (\n    <NavLink\n      key={area.name}\n      className='w-full flex items-center'\n      activeClassName='text-amber-500 font-semibold'\n      to={`/blooway/${blooway}/area/${area.name}`}\n    >\n      <div className='hover:text-amber-500  flex items-center overflow-hidden text-ellipsis max-w-[120px]'>\n        {area.name}\n      </div>\n      {unreadCount !== undefined && unreadCount > 0 && (\n        <div\n          id='unread-count'\n          className='bg-amber-500 text-white ml-1.5 rounded-full w-4 h-4 text-[6px] p-1 flex justify-center items-center'\n        >\n          {unreadCount}\n        </div>\n      )}\n    </NavLink>\n  );\n};\n\nexport default AreaItem;\n","import AreaItem from '@components/AreaItem';\nimport { Area, User } from '@typings/types';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport React, { FC } from 'react';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\nimport { Disclosure } from '@headlessui/react';\n\nconst AreaList: FC = () => {\n  const { blooway } = useParams<{ blooway?: string }>();\n  const { data: userData } = useSWR<User>('/api/users', ApiFetcher, {\n    dedupingInterval: 2000,\n  });\n  const { data: areaData } = useSWR<Area[]>(userData ? `/api/blooways/${blooway}/areas` : null, ApiFetcher);\n\n  return (\n    <>\n      {areaData?.map((area) => {\n        return (\n          <Disclosure.Panel key={area.id} className='px-4 py-1.5 text-sm'>\n            <AreaItem area={area} />\n          </Disclosure.Panel>\n        );\n      })}\n    </>\n  );\n};\n\nexport default AreaList;\n","import React, { FC, memo, useCallback, useState } from 'react';\nimport { Disclosure } from '@headlessui/react';\nimport { ChevronUpIcon, PlusCircleIcon } from '@heroicons/react/24/outline';\nimport PrivateList from '@components/PrivateList';\nimport AreaList from '@components/AreaList';\nimport { CubeIcon, EyeSlashIcon, MegaphoneIcon } from '@heroicons/react/20/solid';\nimport { Link } from 'react-router-dom';\nimport AddAreaModal from '@components/AddAreaModal';\n\ninterface SideBarProps {}\n\nconst SideBar: FC<SideBarProps> = memo(() => {\n  const [showCta, setShowCta] = useState(true);\n  const [showAddAreaModal, setShowAddAreaModal] = useState(false);\n\n  const onRemoveCta = useCallback(() => {\n    setShowCta(false);\n  }, []);\n  const onClickAddArea = useCallback(() => {\n    setShowAddAreaModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowAddAreaModal(false);\n  }, []);\n  return (\n    <div className='hidden md:block w-[25%] rounded-md'>\n      <div className='overflow-y-auto w-full rounded-2xl bg-white p-2'>\n        <Disclosure defaultOpen={true} as='div'>\n          {({ open }) => (\n            <>\n              <Disclosure.Button className='flex w-full justify-between rounded-lg bg-slate-100 px-4 py-2 text-left text-sm font-medium  hover:bg-amber-500 hover:text-white focus:outline-none focus-visible:ring focus-visible:ring-amber-500 focus-visible:ring-opacity-75'>\n                <div className='flex items-center'>\n                  <CubeIcon className='w-5' />\n                  <span className='ml-1'>에리어</span>\n                </div>\n                <ChevronUpIcon className={`${open ? 'rotate-180 transform' : ''} h-5 w-5`} />\n              </Disclosure.Button>\n              <AreaList />\n              <button type='button' onClick={onClickAddArea} className='px-4 py-1.5 text-sm'>\n                <div className={`hover:text-amber-500 flex items-center`}>\n                  <PlusCircleIcon className='stroke-2 w-5 mr-0.5' />\n                  에리어 추가\n                </div>\n              </button>\n            </>\n          )}\n        </Disclosure>\n        <Disclosure defaultOpen={true} as='div' className='mt-2'>\n          {({ open }) => (\n            <>\n              <Disclosure.Button className='flex w-full justify-between rounded-lg bg-slate-100 px-4 py-2 text-left text-sm font-medium  hover:bg-amber-500 hover:text-white focus:outline-none focus-visible:ring focus-visible:ring-amber-500 focus-visible:ring-opacity-75'>\n                <div className='flex items-center'>\n                  <EyeSlashIcon className='w-5' />\n                  <span className='ml-1'>프라이빗 토크</span>\n                </div>\n                <ChevronUpIcon className={`${open ? 'rotate-180 transform' : ''} h-5 w-5`} />\n              </Disclosure.Button>\n              <PrivateList />\n            </>\n          )}\n        </Disclosure>\n        {showCta && (\n          <div id='dropdown-cta' className='p-4 mt-6 rounded-lg bg-indigo-50 '>\n            <div className='flex items-center mb-3'>\n              <div className='bg-indigo-200 flex items-center text-sm font-semibold mr-2 px-2.5 py-0.5 rounded'>\n                <MegaphoneIcon className='w-4' />\n                <span className='ml-1'>Blooways</span>\n              </div>\n              <button\n                type='button'\n                onClick={onRemoveCta}\n                className='ml-auto -mx-1.5 -my-1.5 bg-indigo-50  rounded-lg focus:ring-2 p-1 hover:bg-indigo-200 inline-flex h-6 w-6 '\n              >\n                <svg\n                  aria-hidden='true'\n                  className='w-4 h-4'\n                  fill='currentColor'\n                  viewBox='0 0 20 20'\n                  xmlns='http://www.w3.org/2000/svg'\n                >\n                  <path\n                    fillRule='evenodd'\n                    d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'\n                    clipRule='evenodd'\n                  ></path>\n                </svg>\n              </button>\n            </div>\n            <p className='mb-3 text-sm text-indigo-900'>BlooWays Beta에 오신것을 환영합니다!</p>\n            <Link\n              to='/version-release'\n              className='text-sm text-indigo-900/60 underline font-medium hover:text-indigo-900/80'\n            >\n              버전 릴리즈 확인\n            </Link>\n          </div>\n        )}\n      </div>\n      <AddAreaModal\n        show={showAddAreaModal}\n        onCloseModal={onCloseModal}\n        setShowAddAreaModal={setShowAddAreaModal}\n      />\n    </div>\n  );\n});\n\nexport default SideBar;\n","import AddAreaModal from '@components/AddAreaModal';\nimport InviteBloowayModal from '@components/InviteBloowayModal';\nimport DropMenu from '@components/DropMenu';\nimport Modal from '@components/Modal';\nimport ApiFetcher from '@functions/ApiFetcher';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport useSocket from '@hooks/useSocket';\nimport AreaPage from '@pages/AreaPage';\nimport PrivatePage from '@pages/PrivatePage';\nimport { Area, User, UserWithOnline } from '@typings/types';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useSWR from 'swr';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { Menu } from '@headlessui/react';\nimport SideBar from '@components/SideBar';\nimport { toastConfig } from '@functions/global';\nimport AreaItem from '@components/AreaItem';\nimport PrivateItem from '@components/PrivateItem';\nimport {\n  CubeIcon,\n  Squares2X2Icon,\n  SquaresPlusIcon,\n  UserGroupIcon,\n  UserIcon,\n  UserPlusIcon,\n} from '@heroicons/react/20/solid';\n\nconst Blooway = () => {\n  const params = useParams<{ blooway?: string }>();\n  const { blooway } = params;\n  const [socket, disconnectSocket] = useSocket(blooway);\n  const { data: userData, mutate: revalidateUser } = useSWR<User | false>('/api/users', ApiFetcher);\n  const { data: areaData } = useSWR<Area[]>(userData ? `/api/blooways/${blooway}/areas` : null, ApiFetcher);\n  const { data: memberData } = useSWR<UserWithOnline[]>(\n    userData ? `/api/blooways/${blooway}/members` : null,\n    ApiFetcher,\n  );\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  const [showCreateBloowayModal, setShowCreateBloowayModal] = useState(false);\n  const [showInviteBloowayModal, setShowInviteBloowayModal] = useState(false);\n  const [showAddAreaModal, setShowAddAreaModal] = useState(false);\n\n  interface CreateBloowayValues {\n    bloowayName: string;\n    bloowayLink: string;\n  }\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { isSubmitting },\n  } = useForm<CreateBloowayValues>();\n\n  const onCreateBlooway: SubmitHandler<CreateBloowayValues> = useCallback(\n    (formData) => {\n      const { bloowayName, bloowayLink } = formData;\n      if (!bloowayName || !bloowayName.trim()) {\n        return toast.error('블루웨이 이름을 입력해주세요', toastConfig);\n      }\n      if (!bloowayLink || !bloowayLink.trim()) {\n        return toast.error('키워드 링크를 입력해주세요', toastConfig);\n      }\n      if (bloowayName.length > 14) {\n        return toast.error('14자 이내의 블루웨이 이름을 입력해주세요.', toastConfig);\n      }\n      if (bloowayLink.length > 14) {\n        return toast.error('14자 이내의 블루웨이 링크를 입력해주세요.', toastConfig);\n      }\n      axios\n        .post('/api/blooways', {\n          blooway: bloowayName,\n          link: bloowayLink,\n        })\n        .then(() => {\n          revalidateUser();\n          setShowCreateBloowayModal(false);\n          setValue('bloowayName', '');\n          setValue('bloowayLink', '');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, toastConfig);\n        });\n    },\n    [revalidateUser, setValue],\n  );\n\n  const onClickCreateBlooway = useCallback(() => {\n    setShowCreateBloowayModal(true);\n  }, []);\n\n  const onClickAddArea = useCallback(() => {\n    setShowAddAreaModal(true);\n  }, []);\n\n  const onClickInviteBlooway = useCallback(() => {\n    setShowInviteBloowayModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowCreateBloowayModal(false);\n    setShowAddAreaModal(false);\n    setShowInviteBloowayModal(false);\n  }, []);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    return () => {\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    return () => {\n      disconnectSocket();\n    };\n  }, [disconnectSocket, blooway]);\n  useEffect(() => {\n    if (areaData && userData) {\n      socket?.emit('signin', { id: userData?.id, areas: areaData.map((v) => v.id) });\n    }\n  }, [socket, userData, areaData]);\n\n  if (userData === false) {\n    return <Redirect to='/signin' />;\n  }\n\n  return (\n    <div\n      id='blooway-layout'\n      className='overflow-hidden pt-14 pb-2 h-screen mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 text-slate-800'\n    >\n      <div className='pt-2.5 h-9 border-b-amber-500 border-b p-2 justify-between text-base flex items-center'>\n        <div className='flex z-20 items-center'>\n          <DropMenu\n            menuTitle={userData?.Blooways.find((v) => v.link === blooway)?.name}\n            chevron={true}\n            direction='left'\n          >\n            <Menu.Item>\n              {({ active }) => (\n                <button\n                  onClick={onClickInviteBlooway}\n                  className={`${\n                    active ? 'bg-amber-500 text-white font-semibold' : 'text-slate-800'\n                  } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                >\n                  <UserPlusIcon className='w-4 mr-1' />\n                  <span className='text-ellipsis line-clamp-1 overflow-hidden max-w-[80px]'>\n                    {userData?.Blooways.find((v) => v.link === blooway)?.name}\n                  </span>\n                  에 멤버 초대\n                </button>\n              )}\n            </Menu.Item>\n\n            <Menu.Item>\n              {({ active }) => (\n                <button\n                  type='button'\n                  onClick={onClickAddArea}\n                  className={`${\n                    active ? 'bg-amber-500 text-white font-semibold' : 'text-slate-800'\n                  } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                >\n                  <CubeIcon className='w-4 mr-1' />\n                  <span className='text-ellipsis line-clamp-1 overflow-hidden max-w-[80px]'>\n                    {userData?.Blooways.find((v) => v.link === blooway)?.name}\n                  </span>\n                  에 에리어 추가\n                </button>\n              )}\n            </Menu.Item>\n            <Menu.Item>\n              {({ active }) => (\n                <button\n                  type='button'\n                  onClick={onClickCreateBlooway}\n                  className={`${\n                    active ? 'bg-amber-500 text-white font-semibold' : 'text-slate-800'\n                  } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                >\n                  <SquaresPlusIcon className='w-4 mr-1' />새 블루웨이 생성\n                </button>\n              )}\n            </Menu.Item>\n            <div className='h-[1.5px] w-full px-4 my-1.5 bg-slate-200'></div>\n            {userData?.Blooways.map((blooway) => {\n              return (\n                <Menu.Item key={blooway.link}>\n                  {({ active }) => (\n                    <Link\n                      to={`/blooway/${blooway.link}/area/전체`}\n                      className={`${\n                        active ? 'bg-amber-500 text-white' : 'text-slate-800'\n                      } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                    >\n                      {blooway.link === 'all' ? (\n                        <UserGroupIcon className='w-4 mr-1' />\n                      ) : blooway.link === userData.username ? (\n                        <UserIcon className='w-4 mr-1' />\n                      ) : (\n                        <Squares2X2Icon className='w-4 mr-1' />\n                      )}\n                      {blooway.name}\n                    </Link>\n                  )}\n                </Menu.Item>\n              );\n            })}\n          </DropMenu>\n          {userData?.username === blooway && (\n            <span className='ml-2 inline-flex items-center rounded-md bg-slate-50 px-2 py-1 text-xs font-medium text-slate-800 ring-1 ring-inset ring-slate-500/10'>\n              Me\n            </span>\n          )}\n          {'all' === blooway && (\n            <span className='ml-2 inline-flex items-center rounded-md bg-slate-50 px-2 py-1 text-xs font-medium text-slate-800 ring-1 ring-inset ring-slate-500/10'>\n              Base\n            </span>\n          )}\n        </div>\n        <div className='md:flex  hidden items-center text-slate-500 text-sm font- font-normal'>\n          {userData?.email}\n        </div>\n        <div className='flex z-20 md:hidden items-center gap-2.5'>\n          <DropMenu menuTitle='에리어' chevron={true} direction='right'>\n            {areaData?.map((area) => {\n              return (\n                <Menu.Item key={area.id}>\n                  <button className=' group flex w-full items-center rounded-md px-2 py-2 text-sm'>\n                    <AreaItem area={area} />\n                  </button>\n                </Menu.Item>\n              );\n            })}\n          </DropMenu>\n          <DropMenu menuTitle='프라이빗 토크' chevron={true} direction='right'>\n            {memberData?.map((member) => {\n              const isOnline = onlineList.includes(member.id);\n              return (\n                <Menu.Item key={member.id}>\n                  <button className=' group flex w-full items-center rounded-md px-2 py-2 text-sm'>\n                    <PrivateItem member={member} isOnline={isOnline} />\n                  </button>\n                </Menu.Item>\n              );\n            })}\n          </DropMenu>\n        </div>\n      </div>\n      <div id='blooway-side-splitter' className='flex w-full h-full'>\n        <SideBar />\n        <div className='flex w-full md:w-[75%]'>\n          <Switch>\n            <Route path='/blooway/:blooway/area/:area' component={AreaPage} />\n            <Route path='/blooway/:blooway/private/:id' component={PrivatePage} />\n          </Switch>\n        </div>\n      </div>\n      <Modal\n        modalType={0}\n        modalTitle='새로운 블루웨이 생성하기'\n        show={showCreateBloowayModal}\n        onCloseModal={onCloseModal}\n      >\n        <form id='create-blooway-modal' className='w-full' onSubmit={handleSubmit(onCreateBlooway)}>\n          <div className='w-full my-4'>\n            <div>\n              <span>블루웨이 이름</span>\n              <input\n                id='bloowayName'\n                type='text'\n                className='mt-2 relative block w-full appearance-none rounded-md  border border-slate-300 px-3 py-2 text-slate-800 placeholder-slate-500 focus:z-10 focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm'\n                placeholder='2-14자 이내로 입력해주세요'\n                {...register('bloowayName', {\n                  minLength: 2,\n                  onChange: (e) => setValue('bloowayLink', e.target.value),\n                })}\n              />\n            </div>\n            <div className='mt-2'>\n              <span>키워드 링크</span>\n              <input\n                id='bloowayLink'\n                type='text'\n                className='mt-2 relative block w-full appearance-none rounded-md  border border-slate-300 px-3 py-2 text-slate-800 placeholder-slate-500 focus:z-10 focus:border-amber-500 focus:outline-none focus:ring-amber-500 sm:text-sm'\n                placeholder='링크에 표시할 키워드입니다'\n                {...register('bloowayLink', {\n                  minLength: 2,\n                })}\n              />\n            </div>\n          </div>\n          <div className='flex justify-center'>\n            <button\n              disabled={isSubmitting}\n              type='submit'\n              className='inline-flex justify-center rounded-md border border-transparent bg-amber-500 px-4 py-2 text-sm font-medium text-white hover:bg-amber-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-amber-500 focus-visible:ring-offset-2'\n            >\n              생성하기\n            </button>\n          </div>\n        </form>\n      </Modal>\n      <AddAreaModal\n        show={showAddAreaModal}\n        onCloseModal={onCloseModal}\n        setShowAddAreaModal={setShowAddAreaModal}\n      />\n      <InviteBloowayModal\n        show={showInviteBloowayModal}\n        onCloseModal={onCloseModal}\n        setShowInviteBloowayModal={setShowInviteBloowayModal}\n      />\n\n      <ToastContainer position='bottom-center' />\n    </div>\n  );\n};\n\nexport default Blooway;\n"],"names":["getNoticeModalColor","type","_ref","modalType","modalTitle","show","children","onCloseModal","React","Transition","appear","as","Fragment","Dialog","className","onClose","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","concat","setShowAddAreaModal","blooway","useParams","userData","useSWR","ApiFetcher","data","revalidateArea","mutate","_useForm","useForm","register","handleSubmit","isSubmitting","formState","onAddArea","useCallback","formData","areaName","trim","length","toast","toastConfig","axios","name","then","catch","error","_error$response","console","dir","response","Modal","id","onSubmit","_extends","placeholder","minLength","disabled","setShowInviteBloowayModal","revalidateMember","_useForm$formState","errors","onInviteMember","memberEmail","email","maxLength","pattern","value","message","sockets","disconnect","io","backUrl","transports","on","log","undefined","initialValue","_useState2","useState","setValue","e","target","makeSection","talkList","sections","forEach","talk","monthDate","dayjs","createdAt","format","Array","isArray","push","setShowInviteAreaModal","_useParams","area","revalidateMembers","MentionsInputText","styled","MentionsInput","_templateObject","onSubmitForm","onChangeTalk","inPage","onImageUpload","showInviteAreaModal","onKeydownTalk","key","shiftKey","preventDefault","renderUserSuggestion","member","search","highlightedDisplay","index","focus","Avvvatars","size","style","onClickInviteArea","onChange","onKeyPress","wrap","forceSuggestionsAboveCursor","Mention","appendSpaceOnAdd","trigger","map","v","display","username","renderSuggestion","htmlFor","PhotoIcon","multiple","accept","onClick","UserPlusIcon","RocketLaunchIcon","InviteAreaModal","memo","showCarousel","setShowCarousel","user","Sender","User","result","useMemo","content","startsWith","src","regexifyString","decorator","match","matched","Link","to","input","onShowCarousel","onCloseCarousel","NavLink","activeClassName","scrollbarRef","isDataEnd","isEmpty","talkSections","setSize","onScroll","scrollTop","_scrollbarRef$current","_scrollbarRef$current2","current","getScrollHeight","scrollHeight","Scrollbars","autoHide","ref","onScrollFrame","Object","entries","_ref2","_ref3","date","talks","TalkField","_talkData$","_talkData","socket","_slicedToArray","useSocket","areasData","areaData","find","_useSWRInfinite","useSWRInfinite","onSuccess","setTimeout","scrollToBottom","talkData","mutateTalk","areaMembersData","_useInput2","useInput","setTalk","talkArrived","setTalkArrived","useRef","setDragOver","setImageUploaded","_useState8","savedTalk","prevTalkData","_talkData$0$","unshift","UserId","Date","AreaId","Area","localStorage","setItem","getTime","toString","onMessage","getClientHeight","getScrollTop","useEffect","off","onDrop","FormData","dataTransfer","items","i","kind","file","getAsFile","append","files","onTalkArrivedConfirmed","_scrollbarRef$current3","onDragOver","Redirect","apply","reverse","CubeIcon","ChatBubbleOvalLeftEllipsisIcon","TalkList","TalkForm","meData","SenderId","ReceiverId","Receiver","Number","EyeSlashIcon","isOnline","location","useLocation","dedupingInterval","getItem","_useSWR2","unreadCount","pathname","shadow","memberData","onlineList","setOnlineList","includes","Disclosure","PrivateItem","AreaItem","showCta","setShowCta","_useState4","showAddAreaModal","onRemoveCta","onClickAddArea","defaultOpen","open","ChevronUpIcon","AreaList","PlusCircleIcon","PrivateList","MegaphoneIcon","fill","viewBox","xmlns","fillRule","d","clipRule","AddAreaModal","_userData$Blooways$fi","_useSocket2","disconnectSocket","_useSWR","revalidateUser","showCreateBloowayModal","setShowCreateBloowayModal","_useState6","showInviteBloowayModal","onCreateBlooway","bloowayName","bloowayLink","link","onClickCreateBlooway","onClickInviteBlooway","emit","areas","DropMenu","menuTitle","Blooways","chevron","direction","Menu","_userData$Blooways$fi2","active","_userData$Blooways$fi3","SquaresPlusIcon","_ref4","UserGroupIcon","UserIcon","Squares2X2Icon","SideBar","Switch","Route","path","component","AreaPage","PrivatePage","InviteBloowayModal","ToastContainer","position"],"sourceRoot":""}